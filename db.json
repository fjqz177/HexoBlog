{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/bkg.jpg","path":"images/bkg.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/my_avatar.jpg","path":"images/my_avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","path":"lib/canvas-nest/canvas-nest-nomobile.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/README.md","path":"lib/three/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/package.json","path":"lib/three/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/renovate.json","path":"lib/three/renovate.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_data/variables.styl","hash":"adfbd2ee51aee4e64a6f7973b04ee15ed5f9fc40","modified":1668857660569},{"_id":"source/_data/styles.styl","hash":"d34748367186643f97229d4d64f86e9c8df1119d","modified":1668920827569},{"_id":"source/_posts/Markdown测试.md","hash":"87afb81018b4b3df19f0c4deda2c9e6e07401f97","modified":1668858401679},{"_id":"source/about/index.md","hash":"1e5293c6599a75eeb62f59970e41fb4726e6ba07","modified":1668851258617},{"_id":"source/_posts/RSA加密解密-初版.md","hash":"d5478c0fc91fd34a1f1ef9e6b39664cc3b065a88","modified":1668920740474},{"_id":"source/_posts/RSA加密解密-V1-1.md","hash":"39106b460ac89c845ca04b9dfbd8befb44a050b8","modified":1668920747638},{"_id":"source/_posts/RSA加密解密-V1-2.md","hash":"ff7c9c68bb8b6d88a54efb1786753448157d3b77","modified":1668920753550},{"_id":"source/_posts/hello-world.md","hash":"28cc48ec686195ed045e7637f729fff5a43bf0b8","modified":1668858165198},{"_id":"source/_posts/图形化恩尼格码密码机-初版.md","hash":"08c9b7a4a230b7118c732c59131bed5a68f4b8b7","modified":1668915395925},{"_id":"source/categories/index.md","hash":"9adf748a8fa22b357f3b2e719d54655ffd44ee2b","modified":1668353147787},{"_id":"source/tags/index.md","hash":"b9c02df01c98996f2cd173989678b7097f22852e","modified":1668353073822},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1668264586338},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1668264586338},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1668264586354},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1668264586356},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1668264586339},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1668264586355},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1668264586355},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1668264586386},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1668264586483},{"_id":"themes/next/_config.yml","hash":"403728e21bd23e93ff0900550aa8dc4fac6b211f","modified":1668857598902},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1668264586357},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1668264586358},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1668264586340},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1668264586341},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1668264586347},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1668264586349},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1668264586350},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1668264586347},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1668264586348},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1668264586351},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1668264586361},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1668264586352},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1668264586353},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1668264586353},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1668264586363},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1668264586363},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1668264586364},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1668264586370},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1668264586366},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1668264586366},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1668264586387},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1668264586370},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1668264586369},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1668264586388},{"_id":"themes/next/languages/default.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1668264586390},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1668264586390},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1668264586390},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1668264586392},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1668264586392},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1668264586392},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1668264586395},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1668264586393},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1668264586396},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1668264586397},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1668264586398},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1668264586400},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1668264586401},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1668264586402},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1668264586403},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1668264586403},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1668264586399},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1668264586405},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1668264586405},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1668264586478},{"_id":"themes/next/layout/_layout.swig","hash":"683b0109f14edf10eab019f10c79f74a61814433","modified":1668848506409},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1668264586406},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1668264586480},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1668264586482},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1668264586480},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1668264586481},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1668264586483},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1668264586504},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1668264586373},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1668264586372},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1668264586374},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1668264586373},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1668264586342},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1668264586342},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1668264586343},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1668264586375},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1668264586345},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1668264586377},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1668264586376},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1668264586379},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1668264586380},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1668264586381},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1668264586408},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1668264586382},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1668264586383},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1668264586384},{"_id":"themes/next/layout/_macro/post.swig","hash":"f357edc00a3fb8c525a00e76ddf504392a12dfd4","modified":1668849016533},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1668264586410},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1668264586412},{"_id":"themes/next/layout/_partials/footer.swig","hash":"43039ca272316d67e98db6712b7984e8afb20bb1","modified":1668849465165},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1668264586422},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1668264586438},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1668264586425},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1668264586438},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1668264586437},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1668264586440},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1668264586445},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1668264586447},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1668264586460},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1668264586486},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1668264586452},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1668264586467},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1668264586497},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1668264586466},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1668264586498},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1668264586499},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1668264586502},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1668264586503},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1668264586500},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1668264586502},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1668264586498},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1668264586504},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1668264586506},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1668264586507},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1668264586507},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1668264586508},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1668264586508},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1668264586509},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1668264586512},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1668264586513},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1668264586510},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1668264586515},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1668264586606},{"_id":"themes/next/source/css/main.styl","hash":"87e36f17c45d68cfbadec90d4354b6151eb45f22","modified":1668855533467},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1668264586518},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1668264586579},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"73227fdda0ef3576aa5512280cae4624676ba3c2","modified":1668815072000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1668264586609},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1668264586610},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1668264586613},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1668264586609},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1668264586612},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1668264586616},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1668264586615},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1668264586614},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"1223608c4999b48553b43cc20831a9ddc7128d98","modified":1668815072000},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1668264586627},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"2e511de362c4083075035b989fd24082d808dc9a","modified":1668815072000},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1668264586618},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1668264586620},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1668264586620},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1668264586621},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1668264586622},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1668264586625},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1668264586622},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1668264586415},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1668264586416},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1668264586418},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1668264586419},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1668264586421},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1668264586420},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1668264586420},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1668264586424},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1668264586423},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1668264586426},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1668264586428},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1668264586430},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1668264586426},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1668264586431},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1668264586435},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1668264586432},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1668264586433},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1668264586434},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1668264586441},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1668264586440},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1668264586443},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1668264586442},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1668264586449},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1668264586443},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1668264586453},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1668264586450},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1668264586451},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1668264586450},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1668264586455},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1668264586454},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1668264586456},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1668264586456},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1668264586457},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1668264586458},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1668264586464},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1668264586458},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1668264586464},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1668264586465},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1668264586473},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1668264586471},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1668264586472},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1668264586469},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1668264586474},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1668264586473},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1668264586471},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1668264586470},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1668264586475},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1668264586487},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1668264586476},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1668264586487},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1668264586490},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1668264586488},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1668264586492},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1668264586493},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1668264586491},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1668264586491},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1668264586494},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1668264586496},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1668264586495},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1668264586602},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1668264586602},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1668264586601},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1668264586603},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1668853375452},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1668264586605},{"_id":"themes/next/source/lib/canvas-nest/README.md","hash":"0ba5a24a483f36166f0cb871bd30f4c7467f3593","modified":1668853375453},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1668853375453},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1668853375454},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1668264586637},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1668264586637},{"_id":"themes/next/source/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1668848251217},{"_id":"themes/next/source/lib/three/.gitignore","hash":"e691fe9e685cbd50bcd7e138f4ca3503e7b0eaa4","modified":1668848251215},{"_id":"themes/next/source/lib/three/README.md","hash":"1e31051ce404eaa86df192b7000442bacd31e2b4","modified":1668848251218},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1668848251218},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1668848251219},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1668848251219},{"_id":"themes/next/source/lib/three/package.json","hash":"af5089f910e1041b316def5512a23443f0ffaadc","modified":1668848251223},{"_id":"themes/next/source/lib/three/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1668848251223},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1668848251226},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1668264586623},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1668264586624},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1668264586519},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1668264586522},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1668264586521},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1668264586538},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1668264586562},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1668264586563},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1668264586564},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1668264586569},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1668264586570},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1668264586571},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1668264586571},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1668264586552},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1668264586578},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1668264586553},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1668264586583},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1668264586581},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1668264586588},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1668264586587},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1668264586587},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1668264586585},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1668264586589},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1668264586591},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1668264586592},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1668264586591},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1668264586593},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1668264586596},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1668264586590},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1668264586596},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1668264586594},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1668264586597},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"db28f5f41fafff0ef989e5273121e7f5e4787ec5","modified":1668857807118},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1668264586598},{"_id":"themes/next/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1668853375432},{"_id":"themes/next/source/lib/canvas-nest/.git/config","hash":"38a5217786c605dd5378be8b7ac62fd93a7c8404","modified":1668853375445},{"_id":"themes/next/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1668853373869},{"_id":"themes/next/source/lib/canvas-nest/.git/index","hash":"aa90e177e39e73d7128dbb5a07a5e9d59a97aa38","modified":1668853375455},{"_id":"themes/next/source/lib/canvas-nest/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1668853375451},{"_id":"themes/next/source/lib/canvas-nest/.git/packed-refs","hash":"80eecf0c5c7f21b2678dc1c329f74de19b6a3a67","modified":1668853375423},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1668264586630},{"_id":"themes/next/source/lib/three/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1668848251197},{"_id":"themes/next/source/lib/three/.git/config","hash":"0f73a2e95c545a74869566a72afe722d075b8331","modified":1668848251209},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1668264586633},{"_id":"themes/next/source/lib/three/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1668848251214},{"_id":"themes/next/source/lib/three/.git/packed-refs","hash":"51439496ae6791f8b002584e71f5d10f4f1a1f71","modified":1668848251190},{"_id":"themes/next/source/lib/three/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1668848242099},{"_id":"themes/next/source/lib/three/.git/index","hash":"b9e457d4de876ed6d6e79f3ec9fe1d9db86d5175","modified":1668848251230},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1668848251220},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1668848251222},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1668848251225},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1668848251224},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1668848251225},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1668264586523},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1668264586524},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1668264586525},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1668264586527},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1668264586530},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1668264586525},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1668264586523},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1668264586529},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1668264586531},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1668264586533},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1668264586531},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1668264586532},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1668264586534},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1668264586536},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1668264586539},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1668264586535},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1668264586535},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ca6ac8baf132c01a9c228ffcb80cd27774424f9a","modified":1668848564958},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1668264586541},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1668264586537},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1668264586540},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1668264586541},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1668264586565},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1668264586566},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1668264586542},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1668264586572},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1668264586567},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1668264586573},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1668264586568},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1668264586574},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1668264586574},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1668264586575},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1668264586576},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1668264586577},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1668264586544},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1668264586548},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1668264586546},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1668264586548},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1668264586547},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1668264586554},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1668264586550},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1668264586551},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1668264586549},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1668264586555},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1668264586556},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1668264586555},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1668264586556},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1668264586557},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1668264586558},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1668264586558},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1668853373871},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1668264586559},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1668853373871},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1668264586560},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1668853373873},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/fsmonitor-watchman.sample","hash":"0ec0ec9ac11111433d17ea79e0ae8cec650dcfa4","modified":1668853373872},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1668853373873},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1668853373874},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1668853373875},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1668853373875},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1668853373876},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1668853373876},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1668853373877},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1668853373877},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/HEAD","hash":"11cb98cee6e9066b7e68f58adf3e1b5a8d8a9f4f","modified":1668853375438},{"_id":"themes/next/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1668853373879},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1668853373878},{"_id":"themes/next/source/lib/three/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1668848242111},{"_id":"themes/next/source/lib/three/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1668848242102},{"_id":"themes/next/source/lib/three/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1668848242103},{"_id":"themes/next/source/lib/three/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1668848242104},{"_id":"themes/next/source/lib/three/.git/hooks/fsmonitor-watchman.sample","hash":"0ec0ec9ac11111433d17ea79e0ae8cec650dcfa4","modified":1668848242103},{"_id":"themes/next/source/lib/three/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1668848242104},{"_id":"themes/next/source/lib/three/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1668848242105},{"_id":"themes/next/source/lib/three/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1668848242107},{"_id":"themes/next/source/lib/three/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1668848242106},{"_id":"themes/next/source/lib/three/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1668848242108},{"_id":"themes/next/source/lib/three/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1668848242109},{"_id":"themes/next/source/lib/three/.git/logs/HEAD","hash":"2b99333d55149d0e62e0efc9740058928ba9121b","modified":1668848251202},{"_id":"themes/next/source/lib/three/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1668848242109},{"_id":"themes/next/source/lib/three/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1668848242110},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/pack/pack-8614499ac34603e5f62a25e1ed7138332befa370.idx","hash":"7b050e7c7c4ed82ff61ea69f13085b11bac423cf","modified":1668853375376},{"_id":"themes/next/source/lib/three/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1668848242110},{"_id":"themes/next/source/lib/three/.git/objects/pack/pack-75f0bd54ccc830622c5523e90e168e5d930b759d.idx","hash":"5f4f97f13dbe353456fa6978bc089b4320f79272","modified":1668848251143},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/pack/pack-8614499ac34603e5f62a25e1ed7138332befa370.pack","hash":"455c5c532eee08dd88c8295639309b05fccbb64c","modified":1668853375376},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/heads/master","hash":"473e30291eac5f6d120dfe823b29ad4b2218f05a","modified":1668853375437},{"_id":"themes/next/source/lib/three/.git/refs/heads/master","hash":"dcb9d54aa64c8a682ca5ca209370022b8a8dc843","modified":1668848251202},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1668853375429},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"11cb98cee6e9066b7e68f58adf3e1b5a8d8a9f4f","modified":1668853375440},{"_id":"themes/next/source/lib/three/.git/logs/refs/heads/master","hash":"2b99333d55149d0e62e0efc9740058928ba9121b","modified":1668848251203},{"_id":"themes/next/source/lib/three/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1668848251195},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"11cb98cee6e9066b7e68f58adf3e1b5a8d8a9f4f","modified":1668853375429},{"_id":"themes/next/source/lib/three/.git/logs/refs/remotes/origin/HEAD","hash":"2b99333d55149d0e62e0efc9740058928ba9121b","modified":1668848251195},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1668264586635},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1668264586632},{"_id":"themes/next/source/lib/three/.git/objects/pack/pack-75f0bd54ccc830622c5523e90e168e5d930b759d.pack","hash":"89e534013b432027b94500494ad5573cd869ce00","modified":1668848251141},{"_id":"themes/next/source/images/bkg.jpg","hash":"1cdd530ea6b6d906a73eef4549367ff1fe4cdd69","modified":1668855121471},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1668848251229},{"_id":"themes/next/source/images/my_avatar.jpg","hash":"1b797d0fbeb1a5095febff68181d4fa3efcadb59","modified":1668842170314},{"_id":"public/search.xml","hash":"7c7d944c1a11f5f1c049a2c313923cace3b70706","modified":1669531148088},{"_id":"public/about/index.html","hash":"386e1a39c7c0b6f1cdb3998ba8cff1267f29a964","modified":1669531148088},{"_id":"public/categories/index.html","hash":"d9bdcb3e569775c2fd193ab23610d345c4763078","modified":1669531148088},{"_id":"public/tags/index.html","hash":"91eb28cab2bc2a67d39e37ee64d69a926719fb7b","modified":1669531148088},{"_id":"public/2022/11/20/RSA加密解密-V1-2/index.html","hash":"4554e2e49902f3861b3837e0a9b515d12538873d","modified":1669531148088},{"_id":"public/2022/11/20/RSA加密解密-V1-1/index.html","hash":"2ac71d7e38a9209eb589f2e944b7535d51777097","modified":1669531148088},{"_id":"public/2022/11/20/RSA加密解密-初版/index.html","hash":"6753b0046258db13c29ef16b33027c619a6cb5dc","modified":1669531148088},{"_id":"public/2022/11/20/图形化恩尼格码密码机-初版/index.html","hash":"855b66970056bb5bf2447895c6c6d886e1a4107a","modified":1669531148088},{"_id":"public/2022/11/19/Markdown测试/index.html","hash":"7f449d007b44c1c37d48d6edd7751d35aff69c31","modified":1669531148088},{"_id":"public/2022/11/12/hello-world/index.html","hash":"5de2678cc99566b55cedadabb106297f8b1f4523","modified":1669531148088},{"_id":"public/archives/index.html","hash":"cdf0412372e34f2891ef433990cfa0a345ad40f6","modified":1669531148088},{"_id":"public/archives/2022/index.html","hash":"4773c757f3e7ba746836a1a6c809b4e2a8ca3aea","modified":1669531148088},{"_id":"public/tags/Python/index.html","hash":"7b77d78f109c0582c9aefa0b8724c755b99829ce","modified":1669531148088},{"_id":"public/archives/2022/11/index.html","hash":"861d2e88856b4875eb0a49396a278c549ea01d5c","modified":1669531148088},{"_id":"public/categories/编程/index.html","hash":"9f5535c2a06b2dbccfc87bd10db824fe9f862790","modified":1669531148088},{"_id":"public/tags/密码学/index.html","hash":"f2de7edea81f2eb6deb981c2fdcc7446e975df5f","modified":1669531148088},{"_id":"public/categories/编程/Python/index.html","hash":"6d7daa43a7e77810470ab9cd7a63cd1eb417c0ca","modified":1669531148088},{"_id":"public/index.html","hash":"e1ba20ffe7c7b703a43890337e5b4101e4f4e698","modified":1669531148088},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1669531148088},{"_id":"public/images/apple-touch-icon-next.png","hash":"73227fdda0ef3576aa5512280cae4624676ba3c2","modified":1669531148088},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1669531148088},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1669531148088},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1669531148088},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1669531148088},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1669531148088},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1669531148088},{"_id":"public/images/favicon-16x16-next.png","hash":"1223608c4999b48553b43cc20831a9ddc7128d98","modified":1669531148088},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1669531148088},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1669531148088},{"_id":"public/images/favicon-32x32-next.png","hash":"2e511de362c4083075035b989fd24082d808dc9a","modified":1669531148088},{"_id":"public/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1669531148088},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1669531148088},{"_id":"public/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1669531148088},{"_id":"public/live2dw/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1669531148088},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1669531148088},{"_id":"public/live2dw/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1669531148088},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1669531148088},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1669531148088},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1669531148088},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1669531148088},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1669531148088},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1669531148088},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1669531148088},{"_id":"public/lib/canvas-nest/README.html","hash":"ace0b48718b260b6594aba806923930b38291ff7","modified":1669531148088},{"_id":"public/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1669531148088},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1669531148088},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1669531148088},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1669531148088},{"_id":"public/lib/three/README.html","hash":"4140ac992eab7c3f7f8a04d35fcc8f27256613de","modified":1669531148088},{"_id":"public/lib/three/gulpfile.js","hash":"e0e9e7051d9d82a37c2aba1df396d8b3916323c4","modified":1669531148088},{"_id":"public/lib/three/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1669531148088},{"_id":"public/lib/three/package.json","hash":"3e6a0c56ec47a38c0bf7b404f6e46965ec7d2e3d","modified":1669531148088},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1669531148088},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1669531148088},{"_id":"public/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1669531148088},{"_id":"public/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1669531148088},{"_id":"public/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1669531148088},{"_id":"public/css/main.css","hash":"eadcc3b4d9b4f432aeccad824b857d4c2f0fec1d","modified":1669531148088},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1669531148088},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1669531148088},{"_id":"public/lib/three/canvas_lines.min.js","hash":"ae6584edc0418d68731cab82c1494f26bd77c07d","modified":1669531148088},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"186c3bd6ae352d336cdbd0e555ee76a844854c94","modified":1669531148088},{"_id":"public/lib/three/three-waves.min.js","hash":"329483be97cdda030779da9a6cd1e3eae645cf4f","modified":1669531148088},{"_id":"public/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1669531148088},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1669531148088},{"_id":"public/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1669531148088},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1669531148088},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1669531148088},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1669531148088},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1669531148088},{"_id":"public/live2dw/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1669531148088},{"_id":"public/live2dw/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1669531148088},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1669531148088},{"_id":"public/images/bkg.jpg","hash":"1cdd530ea6b6d906a73eef4549367ff1fe4cdd69","modified":1669531148088},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1669531148088},{"_id":"public/images/my_avatar.jpg","hash":"1b797d0fbeb1a5095febff68181d4fa3efcadb59","modified":1669531148088}],"Category":[{"name":"编程","_id":"clayzqng400064kvnftjj2hpq"},{"name":"Python","parent":"clayzqng400064kvnftjj2hpq","_id":"clayzqnge000g4kvn9q2z4h6i"}],"Data":[{"_id":"variables","data":""},{"_id":"styles","data":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}],"Page":[{"title":"分类","date":"2022-11-13T15:25:11.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-11-13 23:25:11\ntype: \"categories\"\n---\n","updated":"2022-11-13T15:25:47.787Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clayzqnfv00004kvn4olwdbx5","content":"","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"关于","date":"2022-11-13T15:28:31.000Z","type":"about","_content":"# 一个大菜笔\n会一丢丢C++和Python\n对moba一窍不通，只会fps和赛车","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2022-11-13 23:28:31\ntype: \"about\"\n---\n# 一个大菜笔\n会一丢丢C++和Python\n对moba一窍不通，只会fps和赛车","updated":"2022-11-19T09:47:38.617Z","path":"about/index.html","comments":1,"layout":"page","_id":"clayzqng000024kvn8rdgb086","content":"<h1>一个大菜笔</h1>\n<p>会一丢丢C++和Python<br>\n对moba一窍不通，只会fps和赛车</p>\n","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":37,"excerpt":"","more":"<h1>一个大菜笔</h1>\n<p>会一丢丢C++和Python<br>\n对moba一窍不通，只会fps和赛车</p>\n"},{"title":"标签","date":"2022-11-13T15:23:44.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-11-13 23:23:44\ntype: \"tags\"\n---\n","updated":"2022-11-13T15:24:33.822Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clayzqng200044kvn670c9iyw","content":"","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Markdown测试","date":"2022-11-19T11:43:41.000Z","_content":"做一个Markdown页面渲染测试\n<!--more-->\n# 欢迎使用 `Arya` 在线 Markdown 编辑器\n\n[Arya](https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn)，是一款基于 `Vue`、`Vditor`，为未来而构建的在线 Markdown 编辑器；轻量且强大：内置粘贴 HTML 自动转换为 Markdown，支持流程图、甘特图、时序图、任务列表，可导出携带样式的图片、PDF、微信公众号特制的 HTML 等等。\n\n---\n\n## 如何使用\n\n**微注**：清空目前这份默认文档，即处于可使用态。[Arya](https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn) 另一大优点在于：编辑内容只会在您本地进行保存，不会上传您的数据至服务器，**绝不窥测用户个人隐私，可放心使用**；Github 源码：[markdown-online-editor](https://github.com/nicejade/markdown-online-editor)，部分功能仍在开发🚧，敬请期待。\n\n默认为[所见即所得](https://hacpai.com/article/1577370404903?utm_source=github.com)模式，可通过 `⌘-⇧-M`（`Ctrl-⇧-M`）进行切换；或通过以下方式：\n\n- 所见即所得：`⌘-⌥-7`（`Ctrl-alt-7`）；\n- 即时渲染：`⌘-⌥-8`（`Ctrl-alt-8`）；\n- 分屏渲染：`⌘-⌥-9`（`Ctrl-alt-9`）；\n\n### PPT 预览\n\n如果您用作 `PPT` 预览（入口在 `设置`中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 `---` 来定义水平方向上幻灯片，用 `--` 来定义垂直幻灯片；更多设定可以参见 [RevealJs 文档](https://github.com/hakimel/reveal.js#table-of-contents)。\n\n---\n\n## 什么是 Markdown\n\n[Markdown](https://nicelinks.site/tags/Markdown/?utm_source=markdown.lovejade.cn) 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号，以最小的输入代价，生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体**、*斜体* 或者[超文本链接](https://vue-cli3.lovejade.cn/explore/)，更棒的是，它还可以：\n\n---\n\n### 1. 制作待办事宜 `Todo` 列表\n\n- [x] 🎉 通常`Markdown` 解析器自带的基本功能；\n- [x] 🍀 支持**流程图**、**甘特图**、**时序图**、**任务列表**；\n- [x] 🏁 支持粘贴 HTML 自动转换为 Markdown；\n- [x] 💃🏻 支持插入原生 Emoji、设置常用表情列表；\n- [x] 🚑 支持编辑内容保存**本地存储**，防止意外丢失；\n- [x] 📝 支持**实时预览**，主窗口大小拖拽，字符计数；\n- [x] 🛠 支持常用快捷键(**Tab**)，及代码块添加复制\n- [x] ✨ 支持**导出**携带样式的 PDF、PNG、JPEG 等；\n- [x] ✨ 升级 Vditor，新增对`echarts` 图表的支持；\n- [x] 👏 支持检查并格式化 Markdown 语法，使其专业；\n- [x] 🦑 支持五线谱、及[部分站点、视频、音频解析](https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052)；\n- [x] 🌟 增加对**所见即所得**编辑模式的支持(`⌘-⇧-M`)；\n\n---\n\n### 2. 书写一个质能守恒公式[^LaTeX]\n\n$$\nE=mc^2\n$$\n\n---\n\n### 3. 高亮一段代码[^code]\n\n```js\n// 给页面里所有的 DOM 元素添加一个 1px 的描边（outline）;\n[].forEach.call($$(\"*\"),function(a){\n  a.style.outline=\"1px solid #\"+(~~(Math.random()*(1<<24))).toString(16);\n})\n```\n\n### 4. 高效绘制[流程图](https://github.com/knsv/mermaid#flowchart)\n\n```mermaid\ngraph TD;\n  A-->B;\n  A-->C;\n  B-->D;\n  C-->D;\n```\n\n### 5. 高效绘制[序列图](https://github.com/knsv/mermaid#sequence-diagram)\n\n```mermaid\nsequenceDiagram\n  participant Alice\n  participant Bob\n  Alice->John: Hello John, how are you?\n  loop Healthcheck\n      John->John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts <br/>prevail...\n  John-->Alice: Great!\n  John->Bob: How about you?\n  Bob-->John: Jolly good!\n```\n\n### 6. 高效绘制[甘特图](https://github.com/knsv/mermaid#gantt-diagram)\n\n> **甘特图**内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。\n\n```mermaid\ngantt\n  title 项目开发流程\n  section 项目确定\n    需求分析       :a1, 2019-06-22, 3d\n    可行性报告     :after a1, 5d\n    概念验证       : 5d\n  section 项目实施\n    概要设计      :2019-07-05  , 5d\n    详细设计      :2019-07-08, 10d\n    编码          :2019-07-15, 10d\n    测试          :2019-07-22, 5d\n  section 发布验收\n    发布: 2d\n    验收: 3d\n```\n\n### 8. 绘制表格\n\n| 作品名称 | 在线地址 | 上线日期 |\n| :- | :- | :-: |\n| 倾城之链 | [https://nicelinks.site](https://nicelinks.site/??utm_source=markdown.lovejade.cn) | 2017-09-20 |\n| 晚晴幽草轩 | [https://jeffjade.com](https://jeffjade.com/??utm_source=markdown.lovejade.cn) | 2014-09-20 |\n| 静轩之别苑 | [http://quickapp.lovejade.cn](http://quickapp.lovejade.cn/??utm_source=markdown.lovejade.cn) | 2019-01-12 |\n\n### 9. 更详细语法说明\n\n### 想要查看更详细的语法说明，可以参考这份 [Markdown 资源列表](https://github.com/nicejade/nice-front-end-tutorial/blob/master/tutorial/markdown-tutorial.md)，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。\n\n总而言之，不同于其它*所见即所得*的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 `GitHub` 和 技术问答网站 `StackOverFlow` 的御用书写格式，而且越发流行，正在在向各行业渗透。\n\n最新更新于 2019.08.21\n","source":"_posts/Markdown测试.md","raw":"---\ntitle: Markdown测试\ndate: 2022-11-19 19:43:41\ntags:\n---\n做一个Markdown页面渲染测试\n<!--more-->\n# 欢迎使用 `Arya` 在线 Markdown 编辑器\n\n[Arya](https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn)，是一款基于 `Vue`、`Vditor`，为未来而构建的在线 Markdown 编辑器；轻量且强大：内置粘贴 HTML 自动转换为 Markdown，支持流程图、甘特图、时序图、任务列表，可导出携带样式的图片、PDF、微信公众号特制的 HTML 等等。\n\n---\n\n## 如何使用\n\n**微注**：清空目前这份默认文档，即处于可使用态。[Arya](https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn) 另一大优点在于：编辑内容只会在您本地进行保存，不会上传您的数据至服务器，**绝不窥测用户个人隐私，可放心使用**；Github 源码：[markdown-online-editor](https://github.com/nicejade/markdown-online-editor)，部分功能仍在开发🚧，敬请期待。\n\n默认为[所见即所得](https://hacpai.com/article/1577370404903?utm_source=github.com)模式，可通过 `⌘-⇧-M`（`Ctrl-⇧-M`）进行切换；或通过以下方式：\n\n- 所见即所得：`⌘-⌥-7`（`Ctrl-alt-7`）；\n- 即时渲染：`⌘-⌥-8`（`Ctrl-alt-8`）；\n- 分屏渲染：`⌘-⌥-9`（`Ctrl-alt-9`）；\n\n### PPT 预览\n\n如果您用作 `PPT` 预览（入口在 `设置`中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 `---` 来定义水平方向上幻灯片，用 `--` 来定义垂直幻灯片；更多设定可以参见 [RevealJs 文档](https://github.com/hakimel/reveal.js#table-of-contents)。\n\n---\n\n## 什么是 Markdown\n\n[Markdown](https://nicelinks.site/tags/Markdown/?utm_source=markdown.lovejade.cn) 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号，以最小的输入代价，生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体**、*斜体* 或者[超文本链接](https://vue-cli3.lovejade.cn/explore/)，更棒的是，它还可以：\n\n---\n\n### 1. 制作待办事宜 `Todo` 列表\n\n- [x] 🎉 通常`Markdown` 解析器自带的基本功能；\n- [x] 🍀 支持**流程图**、**甘特图**、**时序图**、**任务列表**；\n- [x] 🏁 支持粘贴 HTML 自动转换为 Markdown；\n- [x] 💃🏻 支持插入原生 Emoji、设置常用表情列表；\n- [x] 🚑 支持编辑内容保存**本地存储**，防止意外丢失；\n- [x] 📝 支持**实时预览**，主窗口大小拖拽，字符计数；\n- [x] 🛠 支持常用快捷键(**Tab**)，及代码块添加复制\n- [x] ✨ 支持**导出**携带样式的 PDF、PNG、JPEG 等；\n- [x] ✨ 升级 Vditor，新增对`echarts` 图表的支持；\n- [x] 👏 支持检查并格式化 Markdown 语法，使其专业；\n- [x] 🦑 支持五线谱、及[部分站点、视频、音频解析](https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052)；\n- [x] 🌟 增加对**所见即所得**编辑模式的支持(`⌘-⇧-M`)；\n\n---\n\n### 2. 书写一个质能守恒公式[^LaTeX]\n\n$$\nE=mc^2\n$$\n\n---\n\n### 3. 高亮一段代码[^code]\n\n```js\n// 给页面里所有的 DOM 元素添加一个 1px 的描边（outline）;\n[].forEach.call($$(\"*\"),function(a){\n  a.style.outline=\"1px solid #\"+(~~(Math.random()*(1<<24))).toString(16);\n})\n```\n\n### 4. 高效绘制[流程图](https://github.com/knsv/mermaid#flowchart)\n\n```mermaid\ngraph TD;\n  A-->B;\n  A-->C;\n  B-->D;\n  C-->D;\n```\n\n### 5. 高效绘制[序列图](https://github.com/knsv/mermaid#sequence-diagram)\n\n```mermaid\nsequenceDiagram\n  participant Alice\n  participant Bob\n  Alice->John: Hello John, how are you?\n  loop Healthcheck\n      John->John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts <br/>prevail...\n  John-->Alice: Great!\n  John->Bob: How about you?\n  Bob-->John: Jolly good!\n```\n\n### 6. 高效绘制[甘特图](https://github.com/knsv/mermaid#gantt-diagram)\n\n> **甘特图**内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。\n\n```mermaid\ngantt\n  title 项目开发流程\n  section 项目确定\n    需求分析       :a1, 2019-06-22, 3d\n    可行性报告     :after a1, 5d\n    概念验证       : 5d\n  section 项目实施\n    概要设计      :2019-07-05  , 5d\n    详细设计      :2019-07-08, 10d\n    编码          :2019-07-15, 10d\n    测试          :2019-07-22, 5d\n  section 发布验收\n    发布: 2d\n    验收: 3d\n```\n\n### 8. 绘制表格\n\n| 作品名称 | 在线地址 | 上线日期 |\n| :- | :- | :-: |\n| 倾城之链 | [https://nicelinks.site](https://nicelinks.site/??utm_source=markdown.lovejade.cn) | 2017-09-20 |\n| 晚晴幽草轩 | [https://jeffjade.com](https://jeffjade.com/??utm_source=markdown.lovejade.cn) | 2014-09-20 |\n| 静轩之别苑 | [http://quickapp.lovejade.cn](http://quickapp.lovejade.cn/??utm_source=markdown.lovejade.cn) | 2019-01-12 |\n\n### 9. 更详细语法说明\n\n### 想要查看更详细的语法说明，可以参考这份 [Markdown 资源列表](https://github.com/nicejade/nice-front-end-tutorial/blob/master/tutorial/markdown-tutorial.md)，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。\n\n总而言之，不同于其它*所见即所得*的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 `GitHub` 和 技术问答网站 `StackOverFlow` 的御用书写格式，而且越发流行，正在在向各行业渗透。\n\n最新更新于 2019.08.21\n","slug":"Markdown测试","published":1,"updated":"2022-11-19T11:46:41.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzqnfx00014kvngiavbps7","content":"<p>做一个Markdown页面渲染测试</p>\n<span id=\"more\"></span>\n<h1>欢迎使用 <code>Arya</code> 在线 Markdown 编辑器</h1>\n<p><a href=\"https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn\">Arya</a>，是一款基于 <code>Vue</code>、<code>Vditor</code>，为未来而构建的在线 Markdown 编辑器；轻量且强大：内置粘贴 HTML 自动转换为 Markdown，支持流程图、甘特图、时序图、任务列表，可导出携带样式的图片、PDF、微信公众号特制的 HTML 等等。</p>\n<hr>\n<h2 id=\"如何使用\">如何使用</h2>\n<p><strong>微注</strong>：清空目前这份默认文档，即处于可使用态。<a href=\"https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn\">Arya</a> 另一大优点在于：编辑内容只会在您本地进行保存，不会上传您的数据至服务器，<strong>绝不窥测用户个人隐私，可放心使用</strong>；Github 源码：<a href=\"https://github.com/nicejade/markdown-online-editor\">markdown-online-editor</a>，部分功能仍在开发🚧，敬请期待。</p>\n<p>默认为<a href=\"https://hacpai.com/article/1577370404903?utm_source=github.com\">所见即所得</a>模式，可通过 <code>⌘-⇧-M</code>（<code>Ctrl-⇧-M</code>）进行切换；或通过以下方式：</p>\n<ul>\n<li>所见即所得：<code>⌘-⌥-7</code>（<code>Ctrl-alt-7</code>）；</li>\n<li>即时渲染：<code>⌘-⌥-8</code>（<code>Ctrl-alt-8</code>）；</li>\n<li>分屏渲染：<code>⌘-⌥-9</code>（<code>Ctrl-alt-9</code>）；</li>\n</ul>\n<h3 id=\"PPT-预览\">PPT 预览</h3>\n<p>如果您用作 <code>PPT</code> 预览（入口在 <code>设置</code>中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 <code>---</code> 来定义水平方向上幻灯片，用 <code>--</code> 来定义垂直幻灯片；更多设定可以参见 <a href=\"https://github.com/hakimel/reveal.js#table-of-contents\">RevealJs 文档</a>。</p>\n<hr>\n<h2 id=\"什么是-Markdown\">什么是 Markdown</h2>\n<p><a href=\"https://nicelinks.site/tags/Markdown/?utm_source=markdown.lovejade.cn\">Markdown</a> 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号，以最小的输入代价，生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong>、<em>斜体</em> 或者<a href=\"https://vue-cli3.lovejade.cn/explore/\">超文本链接</a>，更棒的是，它还可以：</p>\n<hr>\n<h3 id=\"1-制作待办事宜-Todo-列表\">1. 制作待办事宜 <code>Todo</code> 列表</h3>\n<ul>\n<li>[x] 🎉 通常<code>Markdown</code> 解析器自带的基本功能；</li>\n<li>[x] 🍀 支持<strong>流程图</strong>、<strong>甘特图</strong>、<strong>时序图</strong>、<strong>任务列表</strong>；</li>\n<li>[x] 🏁 支持粘贴 HTML 自动转换为 Markdown；</li>\n<li>[x] 💃🏻 支持插入原生 Emoji、设置常用表情列表；</li>\n<li>[x] 🚑 支持编辑内容保存<strong>本地存储</strong>，防止意外丢失；</li>\n<li>[x] 📝 支持<strong>实时预览</strong>，主窗口大小拖拽，字符计数；</li>\n<li>[x] 🛠 支持常用快捷键(<strong>Tab</strong>)，及代码块添加复制</li>\n<li>[x] ✨ 支持<strong>导出</strong>携带样式的 PDF、PNG、JPEG 等；</li>\n<li>[x] ✨ 升级 Vditor，新增对<code>echarts</code> 图表的支持；</li>\n<li>[x] 👏 支持检查并格式化 Markdown 语法，使其专业；</li>\n<li>[x] 🦑 支持五线谱、及<a href=\"https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052\">部分站点、视频、音频解析</a>；</li>\n<li>[x] 🌟 增加对<strong>所见即所得</strong>编辑模式的支持(<code>⌘-⇧-M</code>)；</li>\n</ul>\n<hr>\n<h3 id=\"2-书写一个质能守恒公式-LaTeX\">2. 书写一个质能守恒公式[^LaTeX]</h3>\n<p>$$<br>\nE=mc^2<br>\n$$</p>\n<hr>\n<h3 id=\"3-高亮一段代码-code\">3. 高亮一段代码[^code]</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给页面里所有的 DOM 元素添加一个 1px 的描边（outline）;</span></span><br><span class=\"line\">[].<span class=\"property\">forEach</span>.<span class=\"title function_\">call</span>($$(<span class=\"string\">&quot;*&quot;</span>),<span class=\"keyword\">function</span>(<span class=\"params\">a</span>)&#123;</span><br><span class=\"line\">  a.<span class=\"property\">style</span>.<span class=\"property\">outline</span>=<span class=\"string\">&quot;1px solid #&quot;</span>+(~~(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">24</span>))).<span class=\"title function_\">toString</span>(<span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-高效绘制流程图\">4. 高效绘制<a href=\"https://github.com/knsv/mermaid#flowchart\">流程图</a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD;</span><br><span class=\"line\">  A--&gt;B;</span><br><span class=\"line\">  A--&gt;C;</span><br><span class=\"line\">  B--&gt;D;</span><br><span class=\"line\">  C--&gt;D;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-高效绘制序列图\">5. 高效绘制<a href=\"https://github.com/knsv/mermaid#sequence-diagram\">序列图</a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">  participant Alice</span><br><span class=\"line\">  participant Bob</span><br><span class=\"line\">  Alice-&gt;John: Hello John, how are you?</span><br><span class=\"line\">  loop Healthcheck</span><br><span class=\"line\">      John-&gt;John: Fight against hypochondria</span><br><span class=\"line\">  end</span><br><span class=\"line\">  Note right of John: Rational thoughts &lt;br/&gt;prevail...</span><br><span class=\"line\">  John--&gt;Alice: Great!</span><br><span class=\"line\">  John-&gt;Bob: How about you?</span><br><span class=\"line\">  Bob--&gt;John: Jolly good!</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-高效绘制甘特图\">6. 高效绘制<a href=\"https://github.com/knsv/mermaid#gantt-diagram\">甘特图</a></h3>\n<blockquote>\n<p><strong>甘特图</strong>内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">  title 项目开发流程</span><br><span class=\"line\">  section 项目确定</span><br><span class=\"line\">    需求分析       :a1, 2019-06-22, 3d</span><br><span class=\"line\">    可行性报告     :after a1, 5d</span><br><span class=\"line\">    概念验证       : 5d</span><br><span class=\"line\">  section 项目实施</span><br><span class=\"line\">    概要设计      :2019-07-05  , 5d</span><br><span class=\"line\">    详细设计      :2019-07-08, 10d</span><br><span class=\"line\">    编码          :2019-07-15, 10d</span><br><span class=\"line\">    测试          :2019-07-22, 5d</span><br><span class=\"line\">  section 发布验收</span><br><span class=\"line\">    发布: 2d</span><br><span class=\"line\">    验收: 3d</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-绘制表格\">8. 绘制表格</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">作品名称</th>\n<th style=\"text-align:left\">在线地址</th>\n<th style=\"text-align:center\">上线日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">倾城之链</td>\n<td style=\"text-align:left\"><a href=\"https://nicelinks.site/??utm_source=markdown.lovejade.cn\">https://nicelinks.site</a></td>\n<td style=\"text-align:center\">2017-09-20</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">晚晴幽草轩</td>\n<td style=\"text-align:left\"><a href=\"https://jeffjade.com/??utm_source=markdown.lovejade.cn\">https://jeffjade.com</a></td>\n<td style=\"text-align:center\">2014-09-20</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">静轩之别苑</td>\n<td style=\"text-align:left\"><a href=\"http://quickapp.lovejade.cn/??utm_source=markdown.lovejade.cn\">http://quickapp.lovejade.cn</a></td>\n<td style=\"text-align:center\">2019-01-12</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-更详细语法说明\">9. 更详细语法说明</h3>\n<h3 id=\"想要查看更详细的语法说明，可以参考这份-Markdown-资源列表，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。\">想要查看更详细的语法说明，可以参考这份 <a href=\"https://github.com/nicejade/nice-front-end-tutorial/blob/master/tutorial/markdown-tutorial.md\">Markdown 资源列表</a>，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。</h3>\n<p>总而言之，不同于其它<em>所见即所得</em>的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 <code>GitHub</code> 和 技术问答网站 <code>StackOverFlow</code> 的御用书写格式，而且越发流行，正在在向各行业渗透。</p>\n<p>最新更新于 2019.08.21</p>\n","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":2218,"excerpt":"<p>做一个Markdown页面渲染测试</p>","more":"<h1>欢迎使用 <code>Arya</code> 在线 Markdown 编辑器</h1>\n<p><a href=\"https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn\">Arya</a>，是一款基于 <code>Vue</code>、<code>Vditor</code>，为未来而构建的在线 Markdown 编辑器；轻量且强大：内置粘贴 HTML 自动转换为 Markdown，支持流程图、甘特图、时序图、任务列表，可导出携带样式的图片、PDF、微信公众号特制的 HTML 等等。</p>\n<hr>\n<h2 id=\"如何使用\">如何使用</h2>\n<p><strong>微注</strong>：清空目前这份默认文档，即处于可使用态。<a href=\"https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn\">Arya</a> 另一大优点在于：编辑内容只会在您本地进行保存，不会上传您的数据至服务器，<strong>绝不窥测用户个人隐私，可放心使用</strong>；Github 源码：<a href=\"https://github.com/nicejade/markdown-online-editor\">markdown-online-editor</a>，部分功能仍在开发🚧，敬请期待。</p>\n<p>默认为<a href=\"https://hacpai.com/article/1577370404903?utm_source=github.com\">所见即所得</a>模式，可通过 <code>⌘-⇧-M</code>（<code>Ctrl-⇧-M</code>）进行切换；或通过以下方式：</p>\n<ul>\n<li>所见即所得：<code>⌘-⌥-7</code>（<code>Ctrl-alt-7</code>）；</li>\n<li>即时渲染：<code>⌘-⌥-8</code>（<code>Ctrl-alt-8</code>）；</li>\n<li>分屏渲染：<code>⌘-⌥-9</code>（<code>Ctrl-alt-9</code>）；</li>\n</ul>\n<h3 id=\"PPT-预览\">PPT 预览</h3>\n<p>如果您用作 <code>PPT</code> 预览（入口在 <code>设置</code>中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 <code>---</code> 来定义水平方向上幻灯片，用 <code>--</code> 来定义垂直幻灯片；更多设定可以参见 <a href=\"https://github.com/hakimel/reveal.js#table-of-contents\">RevealJs 文档</a>。</p>\n<hr>\n<h2 id=\"什么是-Markdown\">什么是 Markdown</h2>\n<p><a href=\"https://nicelinks.site/tags/Markdown/?utm_source=markdown.lovejade.cn\">Markdown</a> 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号，以最小的输入代价，生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong>、<em>斜体</em> 或者<a href=\"https://vue-cli3.lovejade.cn/explore/\">超文本链接</a>，更棒的是，它还可以：</p>\n<hr>\n<h3 id=\"1-制作待办事宜-Todo-列表\">1. 制作待办事宜 <code>Todo</code> 列表</h3>\n<ul>\n<li>[x] 🎉 通常<code>Markdown</code> 解析器自带的基本功能；</li>\n<li>[x] 🍀 支持<strong>流程图</strong>、<strong>甘特图</strong>、<strong>时序图</strong>、<strong>任务列表</strong>；</li>\n<li>[x] 🏁 支持粘贴 HTML 自动转换为 Markdown；</li>\n<li>[x] 💃🏻 支持插入原生 Emoji、设置常用表情列表；</li>\n<li>[x] 🚑 支持编辑内容保存<strong>本地存储</strong>，防止意外丢失；</li>\n<li>[x] 📝 支持<strong>实时预览</strong>，主窗口大小拖拽，字符计数；</li>\n<li>[x] 🛠 支持常用快捷键(<strong>Tab</strong>)，及代码块添加复制</li>\n<li>[x] ✨ 支持<strong>导出</strong>携带样式的 PDF、PNG、JPEG 等；</li>\n<li>[x] ✨ 升级 Vditor，新增对<code>echarts</code> 图表的支持；</li>\n<li>[x] 👏 支持检查并格式化 Markdown 语法，使其专业；</li>\n<li>[x] 🦑 支持五线谱、及<a href=\"https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052\">部分站点、视频、音频解析</a>；</li>\n<li>[x] 🌟 增加对<strong>所见即所得</strong>编辑模式的支持(<code>⌘-⇧-M</code>)；</li>\n</ul>\n<hr>\n<h3 id=\"2-书写一个质能守恒公式-LaTeX\">2. 书写一个质能守恒公式[^LaTeX]</h3>\n<p>$$<br>\nE=mc^2<br>\n$$</p>\n<hr>\n<h3 id=\"3-高亮一段代码-code\">3. 高亮一段代码[^code]</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给页面里所有的 DOM 元素添加一个 1px 的描边（outline）;</span></span><br><span class=\"line\">[].<span class=\"property\">forEach</span>.<span class=\"title function_\">call</span>($$(<span class=\"string\">&quot;*&quot;</span>),<span class=\"keyword\">function</span>(<span class=\"params\">a</span>)&#123;</span><br><span class=\"line\">  a.<span class=\"property\">style</span>.<span class=\"property\">outline</span>=<span class=\"string\">&quot;1px solid #&quot;</span>+(~~(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">24</span>))).<span class=\"title function_\">toString</span>(<span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-高效绘制流程图\">4. 高效绘制<a href=\"https://github.com/knsv/mermaid#flowchart\">流程图</a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD;</span><br><span class=\"line\">  A--&gt;B;</span><br><span class=\"line\">  A--&gt;C;</span><br><span class=\"line\">  B--&gt;D;</span><br><span class=\"line\">  C--&gt;D;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-高效绘制序列图\">5. 高效绘制<a href=\"https://github.com/knsv/mermaid#sequence-diagram\">序列图</a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">  participant Alice</span><br><span class=\"line\">  participant Bob</span><br><span class=\"line\">  Alice-&gt;John: Hello John, how are you?</span><br><span class=\"line\">  loop Healthcheck</span><br><span class=\"line\">      John-&gt;John: Fight against hypochondria</span><br><span class=\"line\">  end</span><br><span class=\"line\">  Note right of John: Rational thoughts &lt;br/&gt;prevail...</span><br><span class=\"line\">  John--&gt;Alice: Great!</span><br><span class=\"line\">  John-&gt;Bob: How about you?</span><br><span class=\"line\">  Bob--&gt;John: Jolly good!</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-高效绘制甘特图\">6. 高效绘制<a href=\"https://github.com/knsv/mermaid#gantt-diagram\">甘特图</a></h3>\n<blockquote>\n<p><strong>甘特图</strong>内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">  title 项目开发流程</span><br><span class=\"line\">  section 项目确定</span><br><span class=\"line\">    需求分析       :a1, 2019-06-22, 3d</span><br><span class=\"line\">    可行性报告     :after a1, 5d</span><br><span class=\"line\">    概念验证       : 5d</span><br><span class=\"line\">  section 项目实施</span><br><span class=\"line\">    概要设计      :2019-07-05  , 5d</span><br><span class=\"line\">    详细设计      :2019-07-08, 10d</span><br><span class=\"line\">    编码          :2019-07-15, 10d</span><br><span class=\"line\">    测试          :2019-07-22, 5d</span><br><span class=\"line\">  section 发布验收</span><br><span class=\"line\">    发布: 2d</span><br><span class=\"line\">    验收: 3d</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-绘制表格\">8. 绘制表格</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">作品名称</th>\n<th style=\"text-align:left\">在线地址</th>\n<th style=\"text-align:center\">上线日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">倾城之链</td>\n<td style=\"text-align:left\"><a href=\"https://nicelinks.site/??utm_source=markdown.lovejade.cn\">https://nicelinks.site</a></td>\n<td style=\"text-align:center\">2017-09-20</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">晚晴幽草轩</td>\n<td style=\"text-align:left\"><a href=\"https://jeffjade.com/??utm_source=markdown.lovejade.cn\">https://jeffjade.com</a></td>\n<td style=\"text-align:center\">2014-09-20</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">静轩之别苑</td>\n<td style=\"text-align:left\"><a href=\"http://quickapp.lovejade.cn/??utm_source=markdown.lovejade.cn\">http://quickapp.lovejade.cn</a></td>\n<td style=\"text-align:center\">2019-01-12</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-更详细语法说明\">9. 更详细语法说明</h3>\n<h3 id=\"想要查看更详细的语法说明，可以参考这份-Markdown-资源列表，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。\">想要查看更详细的语法说明，可以参考这份 <a href=\"https://github.com/nicejade/nice-front-end-tutorial/blob/master/tutorial/markdown-tutorial.md\">Markdown 资源列表</a>，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。</h3>\n<p>总而言之，不同于其它<em>所见即所得</em>的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 <code>GitHub</code> 和 技术问答网站 <code>StackOverFlow</code> 的御用书写格式，而且越发流行，正在在向各行业渗透。</p>\n<p>最新更新于 2019.08.21</p>"},{"title":"RSA加密解密 V1.1","date":"2022-11-20T05:02:25.000Z","_content":"# RSA加密解密 V1.1\n## V1.1更新日志\n加入显示加密解密所用时间功能\n优化整合取模函数exp_mode\n## 源码\n<!--more-->\n```python\nimport time\n'''\n扩展欧几里的算法\n计算 ax + by = 1中的x与y的整数解（a与b互质）\n'''\ndef ext_gcd(a, b):\n    if b == 0:\n        x1 = 1\n        y1 = 0\n        x = x1\n        y = y1\n        r = a\n        return r, x, y\n    else:\n        r, x1, y1 = ext_gcd(b, a % b)\n        x = y1\n        y = x1 - a // b * y1\n        return r, x, y\n\n'''\n超大整数超大次幂然后对超大的整数取模\n(base ^ exponent) mod n\n'''\ndef exp_mode(base, exp, n):\n    exp_array = bin(exp)[2:][::-1]\n    ll = len(exp_array)\n    result = 1\n \n    for i in range(ll):\n        if ('1'==exp_array[i]):\n            result = (result * base) % n\n        base = (base * base) % n\n \n    return result % n\n\n# 计算公钥和私钥的函数\ndef gen_key(p, q):\n    n = p * q\n    fy = (p - 1) * (q - 1)      # 计算与n互质的整数个数 欧拉函数\n    e = 65537                    # 选取e   一般选取65537\n    # generate d\n    a = e\n    b = fy\n    r, x, y = ext_gcd(a, b)\n    # 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。\n    if x < 0:\n        x = x + fy\n    d = x\n    # 返回：   公钥     私钥\n    return    (n, e), (n, d)\n\n# 加密函数 m是被加密的信息 加密成为c\ndef encrypt(m, pubkey):\n    n = pubkey[0]\n    e = pubkey[1]\n\t\n    time_start_e = time.time()\n\t\n    c = exp_mode(m, e, n)\n\t\n    time_end_e = time.time()\n    time_e = time_end_e - time_start_e\n    return c,time_e\n# 解密函数 c是密文，解密为明文m\ndef decrypt(c, selfkey):\n    n = selfkey[0]\n    d = selfkey[1]\n\t\n    time_start_d = time.time()\n\t\n    m = exp_mode(c, d, n)\n\t\n    time_end_d = time.time()\n    time_d = time_end_d - time_start_d\n\t\n    return m,time_d\n\n# 主程序\nif __name__ == \"__main__\":\n    '''公钥私钥中用到的两个大质数p,q，都是1024位'''\n    p = 106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169\n    q = 144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209\n    '''生成公钥私钥'''\n    pubkey, selfkey = gen_key(p, q)\n    '''需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。'''\n    m = 1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345\n    print(\"待加密信息-->\",m)\n    '''信息加密，m被加密的信息，c是加密后的信息'''\n    c,tme = encrypt(m, pubkey)\n    print(\"被加密后的密文-->\",c)\n    print(\"加密用时\",tme,\"s\")\n    '''信息解密'''\n    d,tmd = decrypt(c, selfkey)\n    print(\"被解密后的明文-->\",d)\n    print(\"解密用时\",tmd,\"s\")\n```","source":"_posts/RSA加密解密-V1-1.md","raw":"---\ntitle: RSA加密解密 V1.1\ndate: 2022-11-20 13:02:25\ncategories:\n - 编程\n - Python\ntags:\n - Python\n - 密码学\n---\n# RSA加密解密 V1.1\n## V1.1更新日志\n加入显示加密解密所用时间功能\n优化整合取模函数exp_mode\n## 源码\n<!--more-->\n```python\nimport time\n'''\n扩展欧几里的算法\n计算 ax + by = 1中的x与y的整数解（a与b互质）\n'''\ndef ext_gcd(a, b):\n    if b == 0:\n        x1 = 1\n        y1 = 0\n        x = x1\n        y = y1\n        r = a\n        return r, x, y\n    else:\n        r, x1, y1 = ext_gcd(b, a % b)\n        x = y1\n        y = x1 - a // b * y1\n        return r, x, y\n\n'''\n超大整数超大次幂然后对超大的整数取模\n(base ^ exponent) mod n\n'''\ndef exp_mode(base, exp, n):\n    exp_array = bin(exp)[2:][::-1]\n    ll = len(exp_array)\n    result = 1\n \n    for i in range(ll):\n        if ('1'==exp_array[i]):\n            result = (result * base) % n\n        base = (base * base) % n\n \n    return result % n\n\n# 计算公钥和私钥的函数\ndef gen_key(p, q):\n    n = p * q\n    fy = (p - 1) * (q - 1)      # 计算与n互质的整数个数 欧拉函数\n    e = 65537                    # 选取e   一般选取65537\n    # generate d\n    a = e\n    b = fy\n    r, x, y = ext_gcd(a, b)\n    # 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。\n    if x < 0:\n        x = x + fy\n    d = x\n    # 返回：   公钥     私钥\n    return    (n, e), (n, d)\n\n# 加密函数 m是被加密的信息 加密成为c\ndef encrypt(m, pubkey):\n    n = pubkey[0]\n    e = pubkey[1]\n\t\n    time_start_e = time.time()\n\t\n    c = exp_mode(m, e, n)\n\t\n    time_end_e = time.time()\n    time_e = time_end_e - time_start_e\n    return c,time_e\n# 解密函数 c是密文，解密为明文m\ndef decrypt(c, selfkey):\n    n = selfkey[0]\n    d = selfkey[1]\n\t\n    time_start_d = time.time()\n\t\n    m = exp_mode(c, d, n)\n\t\n    time_end_d = time.time()\n    time_d = time_end_d - time_start_d\n\t\n    return m,time_d\n\n# 主程序\nif __name__ == \"__main__\":\n    '''公钥私钥中用到的两个大质数p,q，都是1024位'''\n    p = 106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169\n    q = 144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209\n    '''生成公钥私钥'''\n    pubkey, selfkey = gen_key(p, q)\n    '''需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。'''\n    m = 1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345\n    print(\"待加密信息-->\",m)\n    '''信息加密，m被加密的信息，c是加密后的信息'''\n    c,tme = encrypt(m, pubkey)\n    print(\"被加密后的密文-->\",c)\n    print(\"加密用时\",tme,\"s\")\n    '''信息解密'''\n    d,tmd = decrypt(c, selfkey)\n    print(\"被解密后的明文-->\",d)\n    print(\"解密用时\",tmd,\"s\")\n```","slug":"RSA加密解密-V1-1","published":1,"updated":"2022-11-20T05:05:47.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzqng100034kvn0qppbcb5","content":"<h1>RSA加密解密 V1.1</h1>\n<h2 id=\"V1-1更新日志\">V1.1更新日志</h2>\n<p>加入显示加密解密所用时间功能<br>\n优化整合取模函数exp_mode</p>\n<h2 id=\"源码\">源码</h2>\n<span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">扩展欧几里的算法</span></span><br><span class=\"line\"><span class=\"string\">计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ext_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        x1 = <span class=\"number\">1</span></span><br><span class=\"line\">        y1 = <span class=\"number\">0</span></span><br><span class=\"line\">        x = x1</span><br><span class=\"line\">        y = y1</span><br><span class=\"line\">        r = a</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class=\"line\">        x = y1</span><br><span class=\"line\">        y = x1 - a // b * y1</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">超大整数超大次幂然后对超大的整数取模</span></span><br><span class=\"line\"><span class=\"string\">(base ^ exponent) mod n</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp_mode</span>(<span class=\"params\">base, exp, n</span>):</span><br><span class=\"line\">    exp_array = <span class=\"built_in\">bin</span>(exp)[<span class=\"number\">2</span>:][::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    ll = <span class=\"built_in\">len</span>(exp_array)</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(ll):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;1&#x27;</span>==exp_array[i]):</span><br><span class=\"line\">            result = (result * base) % n</span><br><span class=\"line\">        base = (base * base) % n</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result % n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算公钥和私钥的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gen_key</span>(<span class=\"params\">p, q</span>):</span><br><span class=\"line\">    n = p * q</span><br><span class=\"line\">    fy = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)      <span class=\"comment\"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class=\"line\">    e = <span class=\"number\">65537</span>                    <span class=\"comment\"># 选取e   一般选取65537</span></span><br><span class=\"line\">    <span class=\"comment\"># generate d</span></span><br><span class=\"line\">    a = e</span><br><span class=\"line\">    b = fy</span><br><span class=\"line\">    r, x, y = ext_gcd(a, b)</span><br><span class=\"line\">    <span class=\"comment\"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        x = x + fy</span><br><span class=\"line\">    d = x</span><br><span class=\"line\">    <span class=\"comment\"># 返回：   公钥     私钥</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>    (n, e), (n, d)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">m, pubkey</span>):</span><br><span class=\"line\">    n = pubkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    e = pubkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_e = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    c = exp_mode(m, e, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_e = time.time()</span><br><span class=\"line\">    time_e = time_end_e - time_start_e</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c,time_e</span><br><span class=\"line\"><span class=\"comment\"># 解密函数 c是密文，解密为明文m</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">c, selfkey</span>):</span><br><span class=\"line\">    n = selfkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    d = selfkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_d = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    m = exp_mode(c, d, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_d = time.time()</span><br><span class=\"line\">    time_d = time_end_d - time_start_d</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m,time_d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主程序</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    p = <span class=\"number\">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class=\"line\">    q = <span class=\"number\">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    pubkey, selfkey = gen_key(p, q)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    m = <span class=\"number\">1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;待加密信息--&gt;&quot;</span>,m)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    c,tme = encrypt(m, pubkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被加密后的密文--&gt;&quot;</span>,c)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;加密用时&quot;</span>,tme,<span class=\"string\">&quot;s&quot;</span>)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    d,tmd = decrypt(c, selfkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;解密用时&quot;</span>,tmd,<span class=\"string\">&quot;s&quot;</span>)</span><br></pre></td></tr></table></figure>","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":3041,"excerpt":"<h1>RSA加密解密 V1.1</h1>\n<h2 id=\"V1-1更新日志\">V1.1更新日志</h2>\n<p>加入显示加密解密所用时间功能<br>\n优化整合取模函数exp_mode</p>\n<h2 id=\"源码\">源码</h2>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">扩展欧几里的算法</span></span><br><span class=\"line\"><span class=\"string\">计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ext_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        x1 = <span class=\"number\">1</span></span><br><span class=\"line\">        y1 = <span class=\"number\">0</span></span><br><span class=\"line\">        x = x1</span><br><span class=\"line\">        y = y1</span><br><span class=\"line\">        r = a</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class=\"line\">        x = y1</span><br><span class=\"line\">        y = x1 - a // b * y1</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">超大整数超大次幂然后对超大的整数取模</span></span><br><span class=\"line\"><span class=\"string\">(base ^ exponent) mod n</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp_mode</span>(<span class=\"params\">base, exp, n</span>):</span><br><span class=\"line\">    exp_array = <span class=\"built_in\">bin</span>(exp)[<span class=\"number\">2</span>:][::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    ll = <span class=\"built_in\">len</span>(exp_array)</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(ll):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;1&#x27;</span>==exp_array[i]):</span><br><span class=\"line\">            result = (result * base) % n</span><br><span class=\"line\">        base = (base * base) % n</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result % n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算公钥和私钥的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gen_key</span>(<span class=\"params\">p, q</span>):</span><br><span class=\"line\">    n = p * q</span><br><span class=\"line\">    fy = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)      <span class=\"comment\"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class=\"line\">    e = <span class=\"number\">65537</span>                    <span class=\"comment\"># 选取e   一般选取65537</span></span><br><span class=\"line\">    <span class=\"comment\"># generate d</span></span><br><span class=\"line\">    a = e</span><br><span class=\"line\">    b = fy</span><br><span class=\"line\">    r, x, y = ext_gcd(a, b)</span><br><span class=\"line\">    <span class=\"comment\"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        x = x + fy</span><br><span class=\"line\">    d = x</span><br><span class=\"line\">    <span class=\"comment\"># 返回：   公钥     私钥</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>    (n, e), (n, d)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">m, pubkey</span>):</span><br><span class=\"line\">    n = pubkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    e = pubkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_e = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    c = exp_mode(m, e, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_e = time.time()</span><br><span class=\"line\">    time_e = time_end_e - time_start_e</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c,time_e</span><br><span class=\"line\"><span class=\"comment\"># 解密函数 c是密文，解密为明文m</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">c, selfkey</span>):</span><br><span class=\"line\">    n = selfkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    d = selfkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_d = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    m = exp_mode(c, d, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_d = time.time()</span><br><span class=\"line\">    time_d = time_end_d - time_start_d</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m,time_d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主程序</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    p = <span class=\"number\">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class=\"line\">    q = <span class=\"number\">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    pubkey, selfkey = gen_key(p, q)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    m = <span class=\"number\">1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;待加密信息--&gt;&quot;</span>,m)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    c,tme = encrypt(m, pubkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被加密后的密文--&gt;&quot;</span>,c)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;加密用时&quot;</span>,tme,<span class=\"string\">&quot;s&quot;</span>)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    d,tmd = decrypt(c, selfkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;解密用时&quot;</span>,tmd,<span class=\"string\">&quot;s&quot;</span>)</span><br></pre></td></tr></table></figure>"},{"title":"RSA加密解密 初版","date":"2022-11-20T05:00:29.000Z","_content":"# RSA加密解密 初版\n## 初版\n## 源码\n<!--more-->\n```python\n'''\n扩展欧几里的算法\n计算 ax + by = 1中的x与y的整数解（a与b互质）\n'''\ndef ext_gcd(a, b):\n    if b == 0:\n        x1 = 1\n        y1 = 0\n        x = x1\n        y = y1\n        r = a\n        return r, x, y\n    else:\n        r, x1, y1 = ext_gcd(b, a % b)\n        x = y1\n        y = x1 - a // b * y1\n        return r, x, y\n\n'''\n超大整数超大次幂然后对超大的整数取模\n(base ^ exponent) mod n\n'''\ndef exp_mode(base, exponent, n):\n    bin_array = bin(exponent)[2:][::-1]\n    r = len(bin_array)\n    base_array = []\n    \n    pre_base = base\n    base_array.append(pre_base)\n    \n    for _ in range(r - 1):\n        next_base = (pre_base * pre_base) % n \n        base_array.append(next_base)\n        pre_base = next_base\n        \n    a_w_b = __multi(base_array, bin_array, n)\n    return a_w_b % n\ndef __multi(array, bin_array, n):\n    result = 1\n    for index in range(len(array)):\n        a = array[index]\n        if not int(bin_array[index]):\n            continue\n        result *= a\n        result = result % n # 加快连乘的速度\n    return result\n\n# 计算公钥和私钥的函数\ndef gen_key(p, q):\n    n = p * q\n    fy = (p - 1) * (q - 1)      # 计算与n互质的整数个数 欧拉函数\n    e = 65537                    # 选取e   一般选取65537\n    # generate d\n    a = e\n    b = fy\n    r, x, y = ext_gcd(a, b)\n    # 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。\n    if x < 0:\n        x = x + fy\n    d = x\n    # 返回：   公钥     私钥\n    return    (n, e), (n, d)\n\n# 加密函数 m是被加密的信息 加密成为c\ndef encrypt(m, pubkey):\n    n = pubkey[0]\n    e = pubkey[1]\n    \n    c = exp_mode(m, e, n)\n    return c\n# 解密函数 c是密文，解密为明文m\ndef decrypt(c, selfkey):\n    n = selfkey[0]\n    d = selfkey[1]\n    \n    m = exp_mode(c, d, n)\n    return m\n\n# 主程序\nif __name__ == \"__main__\":\n    '''公钥私钥中用到的两个大质数p,q，都是1024位'''\n    p = 106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169\n    q = 144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209\n    '''生成公钥私钥'''\n    pubkey, selfkey = gen_key(p, q)\n    '''需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。'''\n    m = 1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345\n    print(\"待加密信息-->\",m)\n    '''信息加密，m被加密的信息，c是加密后的信息'''\n    c = encrypt(m, pubkey)\n    print(\"被加密后的密文-->\",c)\n    '''信息解密'''\n    d = decrypt(c, selfkey)\n    print(\"被解密后的明文-->\",d)\n```","source":"_posts/RSA加密解密-初版.md","raw":"---\ntitle: RSA加密解密 初版\ndate: 2022-11-20 13:00:29\ncategories:\n - 编程\n - Python\ntags:\n - Python\n - 密码学\n---\n# RSA加密解密 初版\n## 初版\n## 源码\n<!--more-->\n```python\n'''\n扩展欧几里的算法\n计算 ax + by = 1中的x与y的整数解（a与b互质）\n'''\ndef ext_gcd(a, b):\n    if b == 0:\n        x1 = 1\n        y1 = 0\n        x = x1\n        y = y1\n        r = a\n        return r, x, y\n    else:\n        r, x1, y1 = ext_gcd(b, a % b)\n        x = y1\n        y = x1 - a // b * y1\n        return r, x, y\n\n'''\n超大整数超大次幂然后对超大的整数取模\n(base ^ exponent) mod n\n'''\ndef exp_mode(base, exponent, n):\n    bin_array = bin(exponent)[2:][::-1]\n    r = len(bin_array)\n    base_array = []\n    \n    pre_base = base\n    base_array.append(pre_base)\n    \n    for _ in range(r - 1):\n        next_base = (pre_base * pre_base) % n \n        base_array.append(next_base)\n        pre_base = next_base\n        \n    a_w_b = __multi(base_array, bin_array, n)\n    return a_w_b % n\ndef __multi(array, bin_array, n):\n    result = 1\n    for index in range(len(array)):\n        a = array[index]\n        if not int(bin_array[index]):\n            continue\n        result *= a\n        result = result % n # 加快连乘的速度\n    return result\n\n# 计算公钥和私钥的函数\ndef gen_key(p, q):\n    n = p * q\n    fy = (p - 1) * (q - 1)      # 计算与n互质的整数个数 欧拉函数\n    e = 65537                    # 选取e   一般选取65537\n    # generate d\n    a = e\n    b = fy\n    r, x, y = ext_gcd(a, b)\n    # 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。\n    if x < 0:\n        x = x + fy\n    d = x\n    # 返回：   公钥     私钥\n    return    (n, e), (n, d)\n\n# 加密函数 m是被加密的信息 加密成为c\ndef encrypt(m, pubkey):\n    n = pubkey[0]\n    e = pubkey[1]\n    \n    c = exp_mode(m, e, n)\n    return c\n# 解密函数 c是密文，解密为明文m\ndef decrypt(c, selfkey):\n    n = selfkey[0]\n    d = selfkey[1]\n    \n    m = exp_mode(c, d, n)\n    return m\n\n# 主程序\nif __name__ == \"__main__\":\n    '''公钥私钥中用到的两个大质数p,q，都是1024位'''\n    p = 106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169\n    q = 144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209\n    '''生成公钥私钥'''\n    pubkey, selfkey = gen_key(p, q)\n    '''需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。'''\n    m = 1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345\n    print(\"待加密信息-->\",m)\n    '''信息加密，m被加密的信息，c是加密后的信息'''\n    c = encrypt(m, pubkey)\n    print(\"被加密后的密文-->\",c)\n    '''信息解密'''\n    d = decrypt(c, selfkey)\n    print(\"被解密后的明文-->\",d)\n```","slug":"RSA加密解密-初版","published":1,"updated":"2022-11-20T05:05:40.474Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzqng300054kvn9yl60j39","content":"<h1>RSA加密解密 初版</h1>\n<h2 id=\"初版\">初版</h2>\n<h2 id=\"源码\">源码</h2>\n<span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">扩展欧几里的算法</span></span><br><span class=\"line\"><span class=\"string\">计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ext_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        x1 = <span class=\"number\">1</span></span><br><span class=\"line\">        y1 = <span class=\"number\">0</span></span><br><span class=\"line\">        x = x1</span><br><span class=\"line\">        y = y1</span><br><span class=\"line\">        r = a</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class=\"line\">        x = y1</span><br><span class=\"line\">        y = x1 - a // b * y1</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">超大整数超大次幂然后对超大的整数取模</span></span><br><span class=\"line\"><span class=\"string\">(base ^ exponent) mod n</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp_mode</span>(<span class=\"params\">base, exponent, n</span>):</span><br><span class=\"line\">    bin_array = <span class=\"built_in\">bin</span>(exponent)[<span class=\"number\">2</span>:][::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    r = <span class=\"built_in\">len</span>(bin_array)</span><br><span class=\"line\">    base_array = []</span><br><span class=\"line\">    </span><br><span class=\"line\">    pre_base = base</span><br><span class=\"line\">    base_array.append(pre_base)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(r - <span class=\"number\">1</span>):</span><br><span class=\"line\">        next_base = (pre_base * pre_base) % n </span><br><span class=\"line\">        base_array.append(next_base)</span><br><span class=\"line\">        pre_base = next_base</span><br><span class=\"line\">        </span><br><span class=\"line\">    a_w_b = __multi(base_array, bin_array, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a_w_b % n</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__multi</span>(<span class=\"params\">array, bin_array, n</span>):</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(array)):</span><br><span class=\"line\">        a = array[index]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">int</span>(bin_array[index]):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        result *= a</span><br><span class=\"line\">        result = result % n <span class=\"comment\"># 加快连乘的速度</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算公钥和私钥的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gen_key</span>(<span class=\"params\">p, q</span>):</span><br><span class=\"line\">    n = p * q</span><br><span class=\"line\">    fy = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)      <span class=\"comment\"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class=\"line\">    e = <span class=\"number\">65537</span>                    <span class=\"comment\"># 选取e   一般选取65537</span></span><br><span class=\"line\">    <span class=\"comment\"># generate d</span></span><br><span class=\"line\">    a = e</span><br><span class=\"line\">    b = fy</span><br><span class=\"line\">    r, x, y = ext_gcd(a, b)</span><br><span class=\"line\">    <span class=\"comment\"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        x = x + fy</span><br><span class=\"line\">    d = x</span><br><span class=\"line\">    <span class=\"comment\"># 返回：   公钥     私钥</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>    (n, e), (n, d)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">m, pubkey</span>):</span><br><span class=\"line\">    n = pubkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    e = pubkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    c = exp_mode(m, e, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c</span><br><span class=\"line\"><span class=\"comment\"># 解密函数 c是密文，解密为明文m</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">c, selfkey</span>):</span><br><span class=\"line\">    n = selfkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    d = selfkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    m = exp_mode(c, d, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主程序</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    p = <span class=\"number\">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class=\"line\">    q = <span class=\"number\">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    pubkey, selfkey = gen_key(p, q)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    m = <span class=\"number\">1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;待加密信息--&gt;&quot;</span>,m)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    c = encrypt(m, pubkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被加密后的密文--&gt;&quot;</span>,c)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    d = decrypt(c, selfkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br></pre></td></tr></table></figure>","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":2990,"excerpt":"<h1>RSA加密解密 初版</h1>\n<h2 id=\"初版\">初版</h2>\n<h2 id=\"源码\">源码</h2>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">扩展欧几里的算法</span></span><br><span class=\"line\"><span class=\"string\">计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ext_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        x1 = <span class=\"number\">1</span></span><br><span class=\"line\">        y1 = <span class=\"number\">0</span></span><br><span class=\"line\">        x = x1</span><br><span class=\"line\">        y = y1</span><br><span class=\"line\">        r = a</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class=\"line\">        x = y1</span><br><span class=\"line\">        y = x1 - a // b * y1</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">超大整数超大次幂然后对超大的整数取模</span></span><br><span class=\"line\"><span class=\"string\">(base ^ exponent) mod n</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp_mode</span>(<span class=\"params\">base, exponent, n</span>):</span><br><span class=\"line\">    bin_array = <span class=\"built_in\">bin</span>(exponent)[<span class=\"number\">2</span>:][::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    r = <span class=\"built_in\">len</span>(bin_array)</span><br><span class=\"line\">    base_array = []</span><br><span class=\"line\">    </span><br><span class=\"line\">    pre_base = base</span><br><span class=\"line\">    base_array.append(pre_base)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(r - <span class=\"number\">1</span>):</span><br><span class=\"line\">        next_base = (pre_base * pre_base) % n </span><br><span class=\"line\">        base_array.append(next_base)</span><br><span class=\"line\">        pre_base = next_base</span><br><span class=\"line\">        </span><br><span class=\"line\">    a_w_b = __multi(base_array, bin_array, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a_w_b % n</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__multi</span>(<span class=\"params\">array, bin_array, n</span>):</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(array)):</span><br><span class=\"line\">        a = array[index]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">int</span>(bin_array[index]):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        result *= a</span><br><span class=\"line\">        result = result % n <span class=\"comment\"># 加快连乘的速度</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算公钥和私钥的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gen_key</span>(<span class=\"params\">p, q</span>):</span><br><span class=\"line\">    n = p * q</span><br><span class=\"line\">    fy = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)      <span class=\"comment\"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class=\"line\">    e = <span class=\"number\">65537</span>                    <span class=\"comment\"># 选取e   一般选取65537</span></span><br><span class=\"line\">    <span class=\"comment\"># generate d</span></span><br><span class=\"line\">    a = e</span><br><span class=\"line\">    b = fy</span><br><span class=\"line\">    r, x, y = ext_gcd(a, b)</span><br><span class=\"line\">    <span class=\"comment\"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        x = x + fy</span><br><span class=\"line\">    d = x</span><br><span class=\"line\">    <span class=\"comment\"># 返回：   公钥     私钥</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>    (n, e), (n, d)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">m, pubkey</span>):</span><br><span class=\"line\">    n = pubkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    e = pubkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    c = exp_mode(m, e, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c</span><br><span class=\"line\"><span class=\"comment\"># 解密函数 c是密文，解密为明文m</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">c, selfkey</span>):</span><br><span class=\"line\">    n = selfkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    d = selfkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    m = exp_mode(c, d, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主程序</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    p = <span class=\"number\">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class=\"line\">    q = <span class=\"number\">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    pubkey, selfkey = gen_key(p, q)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    m = <span class=\"number\">1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;待加密信息--&gt;&quot;</span>,m)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    c = encrypt(m, pubkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被加密后的密文--&gt;&quot;</span>,c)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    d = decrypt(c, selfkey)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br></pre></td></tr></table></figure>"},{"title":"RSA加密解密 V1.2","date":"2022-11-20T05:03:51.000Z","_content":"# RSA加密解密 V1.2\n## V1.2更新日志\n加入了输入数据判断是否为纯数字\n可以自由选择加密或者解密\n对文本显示进行了优化\n## 源码\n<!--more-->\n```python\nimport time\nimport re\n\n'''\n加入了输入数据判断是否为纯数字\n可以自由选择加密或者解密\n对文本显示进行了优化\n'''\n\n# 扩展欧几里的算法\n# 计算 ax + by = 1中的x与y的整数解（a与b互质）\n\ndef ext_gcd(a, b):\n    if b == 0:\n        x1 = 1\n        y1 = 0\n        x = x1\n        y = y1\n        r = a\n        return r, x, y\n    else:\n        r, x1, y1 = ext_gcd(b, a % b)\n        x = y1\n        y = x1 - a // b * y1\n        return r, x, y\n\n\n# 超大整数超大次幂然后对超大的整数取模\n# (base ^ exponent) mod n\n\ndef exp_mode(base, exp, n):\n    exp_array = bin(exp)[2:][::-1]\n    ll = len(exp_array)\n    result = 1\n \n    for i in range(ll):\n        if ('1'==exp_array[i]):\n            result = (result * base) % n\n        base = (base * base) % n\n \n    return result % n\n\n# 计算公钥和私钥的函数\ndef gen_key(p, q):\n    n = p * q\n    fy = (p - 1) * (q - 1)      # 计算与n互质的整数个数 欧拉函数\n    e = 65537                    # 选取e   一般选取65537\n    # generate d\n    a = e\n    b = fy\n    r, x, y = ext_gcd(a, b)\n    # 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。\n    if x < 0:\n        x = x + fy\n    d = x\n    # 返回：   公钥     私钥\n    return    (n, e), (n, d)\n\n# 加密函数 m是被加密的信息 加密成为c\ndef encrypt(m, pubkey):\n    n = pubkey[0]\n    e = pubkey[1]\n\t\n    time_start_e = time.time()\n\t\n    c = exp_mode(m, e, n)\n\t\n    time_end_e = time.time()\n    time_e = time_end_e - time_start_e\n    return c,time_e\n# 解密函数 c是密文，解密为明文m\ndef decrypt(c, selfkey):\n    n = selfkey[0]\n    d = selfkey[1]\n\t\n    time_start_d = time.time()\n\t\n    m = exp_mode(c, d, n)\n\t\n    time_end_d = time.time()\n    time_d = time_end_d - time_start_d\n\t\n    return m,time_d\n\ndef is_str(m):  \n    an = re.match('[0-9]+$', m)  \n    if an == None:\n        print('密码必须是纯数字！')\n        return False\n    else:\n        return True  \n\n# 主程序\nif __name__ == \"__main__\":\n    while True:\n        '''公钥私钥中用到的两个大质数p,q，都是1024位'''\n        p = 106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169\n        q = 144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209\n        '''生成公钥私钥'''\n        pubkey, selfkey = gen_key(p, q)\n        '''需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。'''\n        m = input(\"请输入你想要处理的数据（必须是纯数字）\\n\")\n        if is_str(m):\n            m = int(m)\n            print(\"待处理信息-->\",m,\"\\n\")\n            '''信息加密，m被加密的信息，c是加密后的信息'''\n            ask = input(\"请问是要进行加密（输入1）还是解密（输入2）？\\n\")\n            if ask == \"1\":\n                c,tme = encrypt(m, pubkey)\n                print(\"被加密后的密文-->\",c,\"\\n\")\n                print(\"加密用时\",tme,\"s\\n\")\n                '''信息解密'''\n            elif ask == \"2\":\n                d,tmd = decrypt(m, selfkey)\n                print(\"被解密后的明文-->\",d)\n                print(\"解密用时\",tmd,\"s\\n\")\n            else:\n                print(\"请输入“1”（加密）或者“2”（解密）！\\n\")\n```","source":"_posts/RSA加密解密-V1-2.md","raw":"---\ntitle: RSA加密解密 V1.2\ndate: 2022-11-20 13:03:51\ncategories:\n - 编程\n - Python\ntags:\n - Python\n - 密码学\n---\n# RSA加密解密 V1.2\n## V1.2更新日志\n加入了输入数据判断是否为纯数字\n可以自由选择加密或者解密\n对文本显示进行了优化\n## 源码\n<!--more-->\n```python\nimport time\nimport re\n\n'''\n加入了输入数据判断是否为纯数字\n可以自由选择加密或者解密\n对文本显示进行了优化\n'''\n\n# 扩展欧几里的算法\n# 计算 ax + by = 1中的x与y的整数解（a与b互质）\n\ndef ext_gcd(a, b):\n    if b == 0:\n        x1 = 1\n        y1 = 0\n        x = x1\n        y = y1\n        r = a\n        return r, x, y\n    else:\n        r, x1, y1 = ext_gcd(b, a % b)\n        x = y1\n        y = x1 - a // b * y1\n        return r, x, y\n\n\n# 超大整数超大次幂然后对超大的整数取模\n# (base ^ exponent) mod n\n\ndef exp_mode(base, exp, n):\n    exp_array = bin(exp)[2:][::-1]\n    ll = len(exp_array)\n    result = 1\n \n    for i in range(ll):\n        if ('1'==exp_array[i]):\n            result = (result * base) % n\n        base = (base * base) % n\n \n    return result % n\n\n# 计算公钥和私钥的函数\ndef gen_key(p, q):\n    n = p * q\n    fy = (p - 1) * (q - 1)      # 计算与n互质的整数个数 欧拉函数\n    e = 65537                    # 选取e   一般选取65537\n    # generate d\n    a = e\n    b = fy\n    r, x, y = ext_gcd(a, b)\n    # 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。\n    if x < 0:\n        x = x + fy\n    d = x\n    # 返回：   公钥     私钥\n    return    (n, e), (n, d)\n\n# 加密函数 m是被加密的信息 加密成为c\ndef encrypt(m, pubkey):\n    n = pubkey[0]\n    e = pubkey[1]\n\t\n    time_start_e = time.time()\n\t\n    c = exp_mode(m, e, n)\n\t\n    time_end_e = time.time()\n    time_e = time_end_e - time_start_e\n    return c,time_e\n# 解密函数 c是密文，解密为明文m\ndef decrypt(c, selfkey):\n    n = selfkey[0]\n    d = selfkey[1]\n\t\n    time_start_d = time.time()\n\t\n    m = exp_mode(c, d, n)\n\t\n    time_end_d = time.time()\n    time_d = time_end_d - time_start_d\n\t\n    return m,time_d\n\ndef is_str(m):  \n    an = re.match('[0-9]+$', m)  \n    if an == None:\n        print('密码必须是纯数字！')\n        return False\n    else:\n        return True  \n\n# 主程序\nif __name__ == \"__main__\":\n    while True:\n        '''公钥私钥中用到的两个大质数p,q，都是1024位'''\n        p = 106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169\n        q = 144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209\n        '''生成公钥私钥'''\n        pubkey, selfkey = gen_key(p, q)\n        '''需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。'''\n        m = input(\"请输入你想要处理的数据（必须是纯数字）\\n\")\n        if is_str(m):\n            m = int(m)\n            print(\"待处理信息-->\",m,\"\\n\")\n            '''信息加密，m被加密的信息，c是加密后的信息'''\n            ask = input(\"请问是要进行加密（输入1）还是解密（输入2）？\\n\")\n            if ask == \"1\":\n                c,tme = encrypt(m, pubkey)\n                print(\"被加密后的密文-->\",c,\"\\n\")\n                print(\"加密用时\",tme,\"s\\n\")\n                '''信息解密'''\n            elif ask == \"2\":\n                d,tmd = decrypt(m, selfkey)\n                print(\"被解密后的明文-->\",d)\n                print(\"解密用时\",tmd,\"s\\n\")\n            else:\n                print(\"请输入“1”（加密）或者“2”（解密）！\\n\")\n```","slug":"RSA加密解密-V1-2","published":1,"updated":"2022-11-20T05:05:53.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzqng600084kvnawgxdwnv","content":"<h1>RSA加密解密 V1.2</h1>\n<h2 id=\"V1-2更新日志\">V1.2更新日志</h2>\n<p>加入了输入数据判断是否为纯数字<br>\n可以自由选择加密或者解密<br>\n对文本显示进行了优化</p>\n<h2 id=\"源码\">源码</h2>\n<span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">加入了输入数据判断是否为纯数字</span></span><br><span class=\"line\"><span class=\"string\">可以自由选择加密或者解密</span></span><br><span class=\"line\"><span class=\"string\">对文本显示进行了优化</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 扩展欧几里的算法</span></span><br><span class=\"line\"><span class=\"comment\"># 计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ext_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        x1 = <span class=\"number\">1</span></span><br><span class=\"line\">        y1 = <span class=\"number\">0</span></span><br><span class=\"line\">        x = x1</span><br><span class=\"line\">        y = y1</span><br><span class=\"line\">        r = a</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class=\"line\">        x = y1</span><br><span class=\"line\">        y = x1 - a // b * y1</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 超大整数超大次幂然后对超大的整数取模</span></span><br><span class=\"line\"><span class=\"comment\"># (base ^ exponent) mod n</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp_mode</span>(<span class=\"params\">base, exp, n</span>):</span><br><span class=\"line\">    exp_array = <span class=\"built_in\">bin</span>(exp)[<span class=\"number\">2</span>:][::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    ll = <span class=\"built_in\">len</span>(exp_array)</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(ll):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;1&#x27;</span>==exp_array[i]):</span><br><span class=\"line\">            result = (result * base) % n</span><br><span class=\"line\">        base = (base * base) % n</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result % n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算公钥和私钥的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gen_key</span>(<span class=\"params\">p, q</span>):</span><br><span class=\"line\">    n = p * q</span><br><span class=\"line\">    fy = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)      <span class=\"comment\"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class=\"line\">    e = <span class=\"number\">65537</span>                    <span class=\"comment\"># 选取e   一般选取65537</span></span><br><span class=\"line\">    <span class=\"comment\"># generate d</span></span><br><span class=\"line\">    a = e</span><br><span class=\"line\">    b = fy</span><br><span class=\"line\">    r, x, y = ext_gcd(a, b)</span><br><span class=\"line\">    <span class=\"comment\"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        x = x + fy</span><br><span class=\"line\">    d = x</span><br><span class=\"line\">    <span class=\"comment\"># 返回：   公钥     私钥</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>    (n, e), (n, d)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">m, pubkey</span>):</span><br><span class=\"line\">    n = pubkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    e = pubkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_e = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    c = exp_mode(m, e, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_e = time.time()</span><br><span class=\"line\">    time_e = time_end_e - time_start_e</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c,time_e</span><br><span class=\"line\"><span class=\"comment\"># 解密函数 c是密文，解密为明文m</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">c, selfkey</span>):</span><br><span class=\"line\">    n = selfkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    d = selfkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_d = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    m = exp_mode(c, d, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_d = time.time()</span><br><span class=\"line\">    time_d = time_end_d - time_start_d</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m,time_d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_str</span>(<span class=\"params\">m</span>):  </span><br><span class=\"line\">    an = re.<span class=\"keyword\">match</span>(<span class=\"string\">&#x27;[0-9]+$&#x27;</span>, m)  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> an == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;密码必须是纯数字！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主程序</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        p = <span class=\"number\">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class=\"line\">        q = <span class=\"number\">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        pubkey, selfkey = gen_key(p, q)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        m = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你想要处理的数据（必须是纯数字）\\n&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> is_str(m):</span><br><span class=\"line\">            m = <span class=\"built_in\">int</span>(m)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;待处理信息--&gt;&quot;</span>,m,<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">            <span class=\"string\">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            ask = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请问是要进行加密（输入1）还是解密（输入2）？\\n&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ask == <span class=\"string\">&quot;1&quot;</span>:</span><br><span class=\"line\">                c,tme = encrypt(m, pubkey)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被加密后的密文--&gt;&quot;</span>,c,<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;加密用时&quot;</span>,tme,<span class=\"string\">&quot;s\\n&quot;</span>)</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> ask == <span class=\"string\">&quot;2&quot;</span>:</span><br><span class=\"line\">                d,tmd = decrypt(m, selfkey)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;解密用时&quot;</span>,tmd,<span class=\"string\">&quot;s\\n&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请输入“1”（加密）或者“2”（解密）！\\n&quot;</span>)</span><br></pre></td></tr></table></figure>","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":2864,"excerpt":"<h1>RSA加密解密 V1.2</h1>\n<h2 id=\"V1-2更新日志\">V1.2更新日志</h2>\n<p>加入了输入数据判断是否为纯数字<br>\n可以自由选择加密或者解密<br>\n对文本显示进行了优化</p>\n<h2 id=\"源码\">源码</h2>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">加入了输入数据判断是否为纯数字</span></span><br><span class=\"line\"><span class=\"string\">可以自由选择加密或者解密</span></span><br><span class=\"line\"><span class=\"string\">对文本显示进行了优化</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 扩展欧几里的算法</span></span><br><span class=\"line\"><span class=\"comment\"># 计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ext_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        x1 = <span class=\"number\">1</span></span><br><span class=\"line\">        y1 = <span class=\"number\">0</span></span><br><span class=\"line\">        x = x1</span><br><span class=\"line\">        y = y1</span><br><span class=\"line\">        r = a</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class=\"line\">        x = y1</span><br><span class=\"line\">        y = x1 - a // b * y1</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r, x, y</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 超大整数超大次幂然后对超大的整数取模</span></span><br><span class=\"line\"><span class=\"comment\"># (base ^ exponent) mod n</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp_mode</span>(<span class=\"params\">base, exp, n</span>):</span><br><span class=\"line\">    exp_array = <span class=\"built_in\">bin</span>(exp)[<span class=\"number\">2</span>:][::-<span class=\"number\">1</span>]</span><br><span class=\"line\">    ll = <span class=\"built_in\">len</span>(exp_array)</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(ll):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;1&#x27;</span>==exp_array[i]):</span><br><span class=\"line\">            result = (result * base) % n</span><br><span class=\"line\">        base = (base * base) % n</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result % n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算公钥和私钥的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gen_key</span>(<span class=\"params\">p, q</span>):</span><br><span class=\"line\">    n = p * q</span><br><span class=\"line\">    fy = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)      <span class=\"comment\"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class=\"line\">    e = <span class=\"number\">65537</span>                    <span class=\"comment\"># 选取e   一般选取65537</span></span><br><span class=\"line\">    <span class=\"comment\"># generate d</span></span><br><span class=\"line\">    a = e</span><br><span class=\"line\">    b = fy</span><br><span class=\"line\">    r, x, y = ext_gcd(a, b)</span><br><span class=\"line\">    <span class=\"comment\"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        x = x + fy</span><br><span class=\"line\">    d = x</span><br><span class=\"line\">    <span class=\"comment\"># 返回：   公钥     私钥</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>    (n, e), (n, d)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">m, pubkey</span>):</span><br><span class=\"line\">    n = pubkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    e = pubkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_e = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    c = exp_mode(m, e, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_e = time.time()</span><br><span class=\"line\">    time_e = time_end_e - time_start_e</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c,time_e</span><br><span class=\"line\"><span class=\"comment\"># 解密函数 c是密文，解密为明文m</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">c, selfkey</span>):</span><br><span class=\"line\">    n = selfkey[<span class=\"number\">0</span>]</span><br><span class=\"line\">    d = selfkey[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_start_d = time.time()</span><br><span class=\"line\">\t</span><br><span class=\"line\">    m = exp_mode(c, d, n)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    time_end_d = time.time()</span><br><span class=\"line\">    time_d = time_end_d - time_start_d</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m,time_d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_str</span>(<span class=\"params\">m</span>):  </span><br><span class=\"line\">    an = re.<span class=\"keyword\">match</span>(<span class=\"string\">&#x27;[0-9]+$&#x27;</span>, m)  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> an == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;密码必须是纯数字！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主程序</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        p = <span class=\"number\">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class=\"line\">        q = <span class=\"number\">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        pubkey, selfkey = gen_key(p, q)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        m = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你想要处理的数据（必须是纯数字）\\n&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> is_str(m):</span><br><span class=\"line\">            m = <span class=\"built_in\">int</span>(m)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;待处理信息--&gt;&quot;</span>,m,<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">            <span class=\"string\">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            ask = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请问是要进行加密（输入1）还是解密（输入2）？\\n&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ask == <span class=\"string\">&quot;1&quot;</span>:</span><br><span class=\"line\">                c,tme = encrypt(m, pubkey)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被加密后的密文--&gt;&quot;</span>,c,<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;加密用时&quot;</span>,tme,<span class=\"string\">&quot;s\\n&quot;</span>)</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> ask == <span class=\"string\">&quot;2&quot;</span>:</span><br><span class=\"line\">                d,tmd = decrypt(m, selfkey)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;解密用时&quot;</span>,tmd,<span class=\"string\">&quot;s\\n&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请输入“1”（加密）或者“2”（解密）！\\n&quot;</span>)</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more-->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more-->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-11-12T14:42:35.877Z","updated":"2022-11-19T11:42:45.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzqng700094kvneo2c4dwa","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":367,"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"图形化恩尼格码密码机 初版","date":"2022-11-20T03:31:25.000Z","_content":"# 图形化恩尼格码密码机 初版\n## 初版\n## 源码\n<!--more-->\n```python\n# 此程序需安装easygui库使用\n\nimport re\nimport string\nimport easygui as ezgui\n \n \ndef simple_replace(password, replace_word1, replace_word2, replace_word3):  \n    count = 0  \n    new_pass = ''  \n    ori_table = 'abcdefghijklmnopqrstuvwxyz'  \n    for obj in password:  \n        table1 = str.maketrans(ori_table, replace_word1)  # 建立转子1的映射表\n        table2 = str.maketrans(ori_table, replace_word2)  # 建立转子2的映射表\n        table3 = str.maketrans(ori_table, replace_word3)  # 建立转子3的映射表\n        new_obj = str.translate(obj, table1)  \n        new_obj = str.translate(new_obj, table2)  \n        new_obj = str.translate(new_obj, table3)  \n        new_obj = reverse_word(new_obj)  \n        reverse_table1 = str.maketrans(replace_word1, ori_table)  \n        reverse_table2 = str.maketrans(replace_word2, ori_table)\n        reverse_table3 = str.maketrans(replace_word3, ori_table)\n        new_obj = str.translate(new_obj, reverse_table3)  \n        new_obj = str.translate(new_obj, reverse_table2)  \n        new_obj = str.translate(new_obj, reverse_table1)  \n        new_pass += new_obj  \n        replace_word1 = rotors(replace_word1)  \n        count += 1  \n        if count % 676 == 0:   \n            replace_word3 = rotors(replace_word3)\n        elif count % 26 == 0:  \n            replace_word2 = rotors(replace_word2)\n    return new_pass  \n \n \n \ndef is_str(password, replace_word1, replace_word2, replace_word3):  \n    an = re.match('[a-z]+$', password)  \n    if not type(password) == type(replace_word1) == type(replace_word2) == type(replace_word3) == type('a'):\n        print('密码必须是字符串！')\n        return False\n    elif not an:\n        print('字符串只能包含小写字母！')\n        return False\n    elif not len(replace_word1) == len(replace_word2) == len(replace_word3) == 26:\n        print('替换码必须为26个字母！')\n        return False\n    else:\n        return True  \n \n \ndef rotors(replace_word):  \n    return replace_word[1:] + replace_word[0]\n \n# 自反器很好设置的，只要设置一个字典，保证所有字母（26个）两两对应就可以了\n \n \ndef reverse_word(word):\n    dic = {'a': 'n', 'b': 'o', 'c': 'p', 'd': 'q',\n           'e': 'r', 'f': 's', 'g': 't', 'h': 'u',\n           'i': 'v', 'j': 'w', 'k': 'x', 'l': 'y',\n           'm': 'z', 'n': 'a', 'o': 'b', 'p': 'c',\n           'q': 'd', 'r': 'e', 's': 'f', 't': 'g',\n           'u': 'h', 'v': 'i', 'w': 'j', 'x': 'k',\n           'y': 'l', 'z': 'm'}\n    return dic[word]\n \nwhile True:\n    title = 'by 石光k一5'\n    ezgui.msgbox('这是恩尼格码密码机',title)\n    a_password = ezgui.enterbox('请输入明文加密或密文解密:',title)\n    r_password1 = 'qwertyuiopasdfghjklzxcvbnm'  # 转子1，自己设置即可\n    r_password2 = 'asdfqwerzxcvtyuiopghjklbnm'  # 转子2，自己设置即可\n    r_password3 = 'poiuytrewqasdfghjklmnbvcxz'  # 转子3，自己设置即可\n    if is_str(a_password, r_password1, r_password2, r_password3):\n        msg=f'密文/明文如下:{simple_replace(a_password, r_password1, r_password2, r_password3)}'\n        ezgui.textbox(msg,title)\n```","source":"_posts/图形化恩尼格码密码机-初版.md","raw":"---\ntitle: 图形化恩尼格码密码机 初版\ndate: 2022-11-20 11:31:25\ncategories:\n - 编程\n - Python\ntags:\n - Python\n - 密码学\n---\n# 图形化恩尼格码密码机 初版\n## 初版\n## 源码\n<!--more-->\n```python\n# 此程序需安装easygui库使用\n\nimport re\nimport string\nimport easygui as ezgui\n \n \ndef simple_replace(password, replace_word1, replace_word2, replace_word3):  \n    count = 0  \n    new_pass = ''  \n    ori_table = 'abcdefghijklmnopqrstuvwxyz'  \n    for obj in password:  \n        table1 = str.maketrans(ori_table, replace_word1)  # 建立转子1的映射表\n        table2 = str.maketrans(ori_table, replace_word2)  # 建立转子2的映射表\n        table3 = str.maketrans(ori_table, replace_word3)  # 建立转子3的映射表\n        new_obj = str.translate(obj, table1)  \n        new_obj = str.translate(new_obj, table2)  \n        new_obj = str.translate(new_obj, table3)  \n        new_obj = reverse_word(new_obj)  \n        reverse_table1 = str.maketrans(replace_word1, ori_table)  \n        reverse_table2 = str.maketrans(replace_word2, ori_table)\n        reverse_table3 = str.maketrans(replace_word3, ori_table)\n        new_obj = str.translate(new_obj, reverse_table3)  \n        new_obj = str.translate(new_obj, reverse_table2)  \n        new_obj = str.translate(new_obj, reverse_table1)  \n        new_pass += new_obj  \n        replace_word1 = rotors(replace_word1)  \n        count += 1  \n        if count % 676 == 0:   \n            replace_word3 = rotors(replace_word3)\n        elif count % 26 == 0:  \n            replace_word2 = rotors(replace_word2)\n    return new_pass  \n \n \n \ndef is_str(password, replace_word1, replace_word2, replace_word3):  \n    an = re.match('[a-z]+$', password)  \n    if not type(password) == type(replace_word1) == type(replace_word2) == type(replace_word3) == type('a'):\n        print('密码必须是字符串！')\n        return False\n    elif not an:\n        print('字符串只能包含小写字母！')\n        return False\n    elif not len(replace_word1) == len(replace_word2) == len(replace_word3) == 26:\n        print('替换码必须为26个字母！')\n        return False\n    else:\n        return True  \n \n \ndef rotors(replace_word):  \n    return replace_word[1:] + replace_word[0]\n \n# 自反器很好设置的，只要设置一个字典，保证所有字母（26个）两两对应就可以了\n \n \ndef reverse_word(word):\n    dic = {'a': 'n', 'b': 'o', 'c': 'p', 'd': 'q',\n           'e': 'r', 'f': 's', 'g': 't', 'h': 'u',\n           'i': 'v', 'j': 'w', 'k': 'x', 'l': 'y',\n           'm': 'z', 'n': 'a', 'o': 'b', 'p': 'c',\n           'q': 'd', 'r': 'e', 's': 'f', 't': 'g',\n           'u': 'h', 'v': 'i', 'w': 'j', 'x': 'k',\n           'y': 'l', 'z': 'm'}\n    return dic[word]\n \nwhile True:\n    title = 'by 石光k一5'\n    ezgui.msgbox('这是恩尼格码密码机',title)\n    a_password = ezgui.enterbox('请输入明文加密或密文解密:',title)\n    r_password1 = 'qwertyuiopasdfghjklzxcvbnm'  # 转子1，自己设置即可\n    r_password2 = 'asdfqwerzxcvtyuiopghjklbnm'  # 转子2，自己设置即可\n    r_password3 = 'poiuytrewqasdfghjklmnbvcxz'  # 转子3，自己设置即可\n    if is_str(a_password, r_password1, r_password2, r_password3):\n        msg=f'密文/明文如下:{simple_replace(a_password, r_password1, r_password2, r_password3)}'\n        ezgui.textbox(msg,title)\n```","slug":"图形化恩尼格码密码机-初版","published":1,"updated":"2022-11-20T03:36:35.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clayzqng8000a4kvn1zo2fytw","content":"<h1>图形化恩尼格码密码机 初版</h1>\n<h2 id=\"初版\">初版</h2>\n<h2 id=\"源码\">源码</h2>\n<span id=\"more\"></span>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此程序需安装easygui库使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> easygui <span class=\"keyword\">as</span> ezgui</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">simple_replace</span>(<span class=\"params\">password, replace_word1, replace_word2, replace_word3</span>):  </span><br><span class=\"line\">    count = <span class=\"number\">0</span>  </span><br><span class=\"line\">    new_pass = <span class=\"string\">&#x27;&#x27;</span>  </span><br><span class=\"line\">    ori_table = <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> obj <span class=\"keyword\">in</span> password:  </span><br><span class=\"line\">        table1 = <span class=\"built_in\">str</span>.maketrans(ori_table, replace_word1)  <span class=\"comment\"># 建立转子1的映射表</span></span><br><span class=\"line\">        table2 = <span class=\"built_in\">str</span>.maketrans(ori_table, replace_word2)  <span class=\"comment\"># 建立转子2的映射表</span></span><br><span class=\"line\">        table3 = <span class=\"built_in\">str</span>.maketrans(ori_table, replace_word3)  <span class=\"comment\"># 建立转子3的映射表</span></span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(obj, table1)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, table2)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, table3)  </span><br><span class=\"line\">        new_obj = reverse_word(new_obj)  </span><br><span class=\"line\">        reverse_table1 = <span class=\"built_in\">str</span>.maketrans(replace_word1, ori_table)  </span><br><span class=\"line\">        reverse_table2 = <span class=\"built_in\">str</span>.maketrans(replace_word2, ori_table)</span><br><span class=\"line\">        reverse_table3 = <span class=\"built_in\">str</span>.maketrans(replace_word3, ori_table)</span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, reverse_table3)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, reverse_table2)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, reverse_table1)  </span><br><span class=\"line\">        new_pass += new_obj  </span><br><span class=\"line\">        replace_word1 = rotors(replace_word1)  </span><br><span class=\"line\">        count += <span class=\"number\">1</span>  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> count % <span class=\"number\">676</span> == <span class=\"number\">0</span>:   </span><br><span class=\"line\">            replace_word3 = rotors(replace_word3)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> count % <span class=\"number\">26</span> == <span class=\"number\">0</span>:  </span><br><span class=\"line\">            replace_word2 = rotors(replace_word2)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> new_pass  </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_str</span>(<span class=\"params\">password, replace_word1, replace_word2, replace_word3</span>):  </span><br><span class=\"line\">    an = re.<span class=\"keyword\">match</span>(<span class=\"string\">&#x27;[a-z]+$&#x27;</span>, password)  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">type</span>(password) == <span class=\"built_in\">type</span>(replace_word1) == <span class=\"built_in\">type</span>(replace_word2) == <span class=\"built_in\">type</span>(replace_word3) == <span class=\"built_in\">type</span>(<span class=\"string\">&#x27;a&#x27;</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;密码必须是字符串！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> an:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;字符串只能包含小写字母！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> <span class=\"built_in\">len</span>(replace_word1) == <span class=\"built_in\">len</span>(replace_word2) == <span class=\"built_in\">len</span>(replace_word3) == <span class=\"number\">26</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;替换码必须为26个字母！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span>  </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rotors</span>(<span class=\"params\">replace_word</span>):  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> replace_word[<span class=\"number\">1</span>:] + replace_word[<span class=\"number\">0</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 自反器很好设置的，只要设置一个字典，保证所有字母（26个）两两对应就可以了</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">reverse_word</span>(<span class=\"params\">word</span>):</span><br><span class=\"line\">    dic = &#123;<span class=\"string\">&#x27;a&#x27;</span>: <span class=\"string\">&#x27;n&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>: <span class=\"string\">&#x27;o&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>: <span class=\"string\">&#x27;p&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>: <span class=\"string\">&#x27;q&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;e&#x27;</span>: <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>: <span class=\"string\">&#x27;s&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>: <span class=\"string\">&#x27;t&#x27;</span>, <span class=\"string\">&#x27;h&#x27;</span>: <span class=\"string\">&#x27;u&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;i&#x27;</span>: <span class=\"string\">&#x27;v&#x27;</span>, <span class=\"string\">&#x27;j&#x27;</span>: <span class=\"string\">&#x27;w&#x27;</span>, <span class=\"string\">&#x27;k&#x27;</span>: <span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;l&#x27;</span>: <span class=\"string\">&#x27;y&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;m&#x27;</span>: <span class=\"string\">&#x27;z&#x27;</span>, <span class=\"string\">&#x27;n&#x27;</span>: <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>: <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;p&#x27;</span>: <span class=\"string\">&#x27;c&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;q&#x27;</span>: <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>: <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;s&#x27;</span>: <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"string\">&#x27;t&#x27;</span>: <span class=\"string\">&#x27;g&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;u&#x27;</span>: <span class=\"string\">&#x27;h&#x27;</span>, <span class=\"string\">&#x27;v&#x27;</span>: <span class=\"string\">&#x27;i&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>: <span class=\"string\">&#x27;j&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>: <span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;y&#x27;</span>: <span class=\"string\">&#x27;l&#x27;</span>, <span class=\"string\">&#x27;z&#x27;</span>: <span class=\"string\">&#x27;m&#x27;</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dic[word]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    title = <span class=\"string\">&#x27;by 石光k一5&#x27;</span></span><br><span class=\"line\">    ezgui.msgbox(<span class=\"string\">&#x27;这是恩尼格码密码机&#x27;</span>,title)</span><br><span class=\"line\">    a_password = ezgui.enterbox(<span class=\"string\">&#x27;请输入明文加密或密文解密:&#x27;</span>,title)</span><br><span class=\"line\">    r_password1 = <span class=\"string\">&#x27;qwertyuiopasdfghjklzxcvbnm&#x27;</span>  <span class=\"comment\"># 转子1，自己设置即可</span></span><br><span class=\"line\">    r_password2 = <span class=\"string\">&#x27;asdfqwerzxcvtyuiopghjklbnm&#x27;</span>  <span class=\"comment\"># 转子2，自己设置即可</span></span><br><span class=\"line\">    r_password3 = <span class=\"string\">&#x27;poiuytrewqasdfghjklmnbvcxz&#x27;</span>  <span class=\"comment\"># 转子3，自己设置即可</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_str(a_password, r_password1, r_password2, r_password3):</span><br><span class=\"line\">        msg=<span class=\"string\">f&#x27;密文/明文如下:<span class=\"subst\">&#123;simple_replace(a_password, r_password1, r_password2, r_password3)&#125;</span>&#x27;</span></span><br><span class=\"line\">        ezgui.textbox(msg,title)</span><br></pre></td></tr></table></figure>","site":{"data":{"variables":"","styles":"body {\n  background: url(\"/images/bkg.jpg\");\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: 50% 50%;\n}\n.content-wrap {\n  opacity: 0.85;\n}\n.sidebar {\n  opacity: 0.85;\n}\n.header-inner {\n  background: rgba(255,255,255,0.85);\n}\n.popup {\n  opacity: 0.85;\n}\n"}},"length":2953,"excerpt":"<h1>图形化恩尼格码密码机 初版</h1>\n<h2 id=\"初版\">初版</h2>\n<h2 id=\"源码\">源码</h2>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此程序需安装easygui库使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> easygui <span class=\"keyword\">as</span> ezgui</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">simple_replace</span>(<span class=\"params\">password, replace_word1, replace_word2, replace_word3</span>):  </span><br><span class=\"line\">    count = <span class=\"number\">0</span>  </span><br><span class=\"line\">    new_pass = <span class=\"string\">&#x27;&#x27;</span>  </span><br><span class=\"line\">    ori_table = <span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> obj <span class=\"keyword\">in</span> password:  </span><br><span class=\"line\">        table1 = <span class=\"built_in\">str</span>.maketrans(ori_table, replace_word1)  <span class=\"comment\"># 建立转子1的映射表</span></span><br><span class=\"line\">        table2 = <span class=\"built_in\">str</span>.maketrans(ori_table, replace_word2)  <span class=\"comment\"># 建立转子2的映射表</span></span><br><span class=\"line\">        table3 = <span class=\"built_in\">str</span>.maketrans(ori_table, replace_word3)  <span class=\"comment\"># 建立转子3的映射表</span></span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(obj, table1)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, table2)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, table3)  </span><br><span class=\"line\">        new_obj = reverse_word(new_obj)  </span><br><span class=\"line\">        reverse_table1 = <span class=\"built_in\">str</span>.maketrans(replace_word1, ori_table)  </span><br><span class=\"line\">        reverse_table2 = <span class=\"built_in\">str</span>.maketrans(replace_word2, ori_table)</span><br><span class=\"line\">        reverse_table3 = <span class=\"built_in\">str</span>.maketrans(replace_word3, ori_table)</span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, reverse_table3)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, reverse_table2)  </span><br><span class=\"line\">        new_obj = <span class=\"built_in\">str</span>.translate(new_obj, reverse_table1)  </span><br><span class=\"line\">        new_pass += new_obj  </span><br><span class=\"line\">        replace_word1 = rotors(replace_word1)  </span><br><span class=\"line\">        count += <span class=\"number\">1</span>  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> count % <span class=\"number\">676</span> == <span class=\"number\">0</span>:   </span><br><span class=\"line\">            replace_word3 = rotors(replace_word3)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> count % <span class=\"number\">26</span> == <span class=\"number\">0</span>:  </span><br><span class=\"line\">            replace_word2 = rotors(replace_word2)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> new_pass  </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_str</span>(<span class=\"params\">password, replace_word1, replace_word2, replace_word3</span>):  </span><br><span class=\"line\">    an = re.<span class=\"keyword\">match</span>(<span class=\"string\">&#x27;[a-z]+$&#x27;</span>, password)  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">type</span>(password) == <span class=\"built_in\">type</span>(replace_word1) == <span class=\"built_in\">type</span>(replace_word2) == <span class=\"built_in\">type</span>(replace_word3) == <span class=\"built_in\">type</span>(<span class=\"string\">&#x27;a&#x27;</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;密码必须是字符串！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> an:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;字符串只能包含小写字母！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> <span class=\"built_in\">len</span>(replace_word1) == <span class=\"built_in\">len</span>(replace_word2) == <span class=\"built_in\">len</span>(replace_word3) == <span class=\"number\">26</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;替换码必须为26个字母！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span>  </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rotors</span>(<span class=\"params\">replace_word</span>):  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> replace_word[<span class=\"number\">1</span>:] + replace_word[<span class=\"number\">0</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 自反器很好设置的，只要设置一个字典，保证所有字母（26个）两两对应就可以了</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">reverse_word</span>(<span class=\"params\">word</span>):</span><br><span class=\"line\">    dic = &#123;<span class=\"string\">&#x27;a&#x27;</span>: <span class=\"string\">&#x27;n&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>: <span class=\"string\">&#x27;o&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>: <span class=\"string\">&#x27;p&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>: <span class=\"string\">&#x27;q&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;e&#x27;</span>: <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>: <span class=\"string\">&#x27;s&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>: <span class=\"string\">&#x27;t&#x27;</span>, <span class=\"string\">&#x27;h&#x27;</span>: <span class=\"string\">&#x27;u&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;i&#x27;</span>: <span class=\"string\">&#x27;v&#x27;</span>, <span class=\"string\">&#x27;j&#x27;</span>: <span class=\"string\">&#x27;w&#x27;</span>, <span class=\"string\">&#x27;k&#x27;</span>: <span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;l&#x27;</span>: <span class=\"string\">&#x27;y&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;m&#x27;</span>: <span class=\"string\">&#x27;z&#x27;</span>, <span class=\"string\">&#x27;n&#x27;</span>: <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>: <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;p&#x27;</span>: <span class=\"string\">&#x27;c&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;q&#x27;</span>: <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>: <span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;s&#x27;</span>: <span class=\"string\">&#x27;f&#x27;</span>, <span class=\"string\">&#x27;t&#x27;</span>: <span class=\"string\">&#x27;g&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;u&#x27;</span>: <span class=\"string\">&#x27;h&#x27;</span>, <span class=\"string\">&#x27;v&#x27;</span>: <span class=\"string\">&#x27;i&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>: <span class=\"string\">&#x27;j&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>: <span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;y&#x27;</span>: <span class=\"string\">&#x27;l&#x27;</span>, <span class=\"string\">&#x27;z&#x27;</span>: <span class=\"string\">&#x27;m&#x27;</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dic[word]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    title = <span class=\"string\">&#x27;by 石光k一5&#x27;</span></span><br><span class=\"line\">    ezgui.msgbox(<span class=\"string\">&#x27;这是恩尼格码密码机&#x27;</span>,title)</span><br><span class=\"line\">    a_password = ezgui.enterbox(<span class=\"string\">&#x27;请输入明文加密或密文解密:&#x27;</span>,title)</span><br><span class=\"line\">    r_password1 = <span class=\"string\">&#x27;qwertyuiopasdfghjklzxcvbnm&#x27;</span>  <span class=\"comment\"># 转子1，自己设置即可</span></span><br><span class=\"line\">    r_password2 = <span class=\"string\">&#x27;asdfqwerzxcvtyuiopghjklbnm&#x27;</span>  <span class=\"comment\"># 转子2，自己设置即可</span></span><br><span class=\"line\">    r_password3 = <span class=\"string\">&#x27;poiuytrewqasdfghjklmnbvcxz&#x27;</span>  <span class=\"comment\"># 转子3，自己设置即可</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_str(a_password, r_password1, r_password2, r_password3):</span><br><span class=\"line\">        msg=<span class=\"string\">f&#x27;密文/明文如下:<span class=\"subst\">&#123;simple_replace(a_password, r_password1, r_password2, r_password3)&#125;</span>&#x27;</span></span><br><span class=\"line\">        ezgui.textbox(msg,title)</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"clayzqng100034kvn0qppbcb5","category_id":"clayzqng400064kvnftjj2hpq","_id":"clayzqngg000o4kvndcka5xa4"},{"post_id":"clayzqng100034kvn0qppbcb5","category_id":"clayzqnge000g4kvn9q2z4h6i","_id":"clayzqngg000q4kvn03eifb4e"},{"post_id":"clayzqng8000a4kvn1zo2fytw","category_id":"clayzqng400064kvnftjj2hpq","_id":"clayzqngg000s4kvnhtinch53"},{"post_id":"clayzqng8000a4kvn1zo2fytw","category_id":"clayzqnge000g4kvn9q2z4h6i","_id":"clayzqngh000v4kvn45ulbu0r"},{"post_id":"clayzqng300054kvn9yl60j39","category_id":"clayzqng400064kvnftjj2hpq","_id":"clayzqngh000x4kvn2thmgcir"},{"post_id":"clayzqng300054kvn9yl60j39","category_id":"clayzqnge000g4kvn9q2z4h6i","_id":"clayzqngh000z4kvn95vo2frz"},{"post_id":"clayzqng600084kvnawgxdwnv","category_id":"clayzqng400064kvnftjj2hpq","_id":"clayzqngi00114kvnfcf8bbh8"},{"post_id":"clayzqng600084kvnawgxdwnv","category_id":"clayzqnge000g4kvn9q2z4h6i","_id":"clayzqngi00124kvn3j00h2da"}],"PostTag":[{"post_id":"clayzqng100034kvn0qppbcb5","tag_id":"clayzqng500074kvna0nr4o4l","_id":"clayzqnge000f4kvnfknn0u0d"},{"post_id":"clayzqng100034kvn0qppbcb5","tag_id":"clayzqng8000c4kvn9whaaz6d","_id":"clayzqnge000h4kvn24wrbcz7"},{"post_id":"clayzqng300054kvn9yl60j39","tag_id":"clayzqng500074kvna0nr4o4l","_id":"clayzqngf000l4kvn8c7iacrt"},{"post_id":"clayzqng300054kvn9yl60j39","tag_id":"clayzqng8000c4kvn9whaaz6d","_id":"clayzqngg000m4kvngf3q2a0n"},{"post_id":"clayzqng600084kvnawgxdwnv","tag_id":"clayzqng500074kvna0nr4o4l","_id":"clayzqngh000u4kvngcb8gp5b"},{"post_id":"clayzqng600084kvnawgxdwnv","tag_id":"clayzqng8000c4kvn9whaaz6d","_id":"clayzqngh000w4kvn726rf0ib"},{"post_id":"clayzqng8000a4kvn1zo2fytw","tag_id":"clayzqng500074kvna0nr4o4l","_id":"clayzqngh000y4kvncx9vg8n8"},{"post_id":"clayzqng8000a4kvn1zo2fytw","tag_id":"clayzqng8000c4kvn9whaaz6d","_id":"clayzqngi00104kvndgoya7j9"}],"Tag":[{"name":"Python","_id":"clayzqng500074kvna0nr4o4l"},{"name":"密码学","_id":"clayzqng8000c4kvn9whaaz6d"}]}}