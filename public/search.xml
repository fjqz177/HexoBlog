<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RSA加密解密 V1.2</title>
      <link href="/2022/11/20/RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-V1-2/"/>
      <url>/2022/11/20/RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-V1-2/</url>
      
        <content type="html"><![CDATA[<h1>RSA加密解密 V1.2</h1><h2 id="V1-2更新日志">V1.2更新日志</h2><p>加入了输入数据判断是否为纯数字<br>可以自由选择加密或者解密<br>对文本显示进行了优化</p><h2 id="源码">源码</h2><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">加入了输入数据判断是否为纯数字</span></span><br><span class="line"><span class="string">可以自由选择加密或者解密</span></span><br><span class="line"><span class="string">对文本显示进行了优化</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展欧几里的算法</span></span><br><span class="line"><span class="comment"># 计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ext_gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        x1 = <span class="number">1</span></span><br><span class="line">        y1 = <span class="number">0</span></span><br><span class="line">        x = x1</span><br><span class="line">        y = y1</span><br><span class="line">        r = a</span><br><span class="line">        <span class="keyword">return</span> r, x, y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class="line">        x = y1</span><br><span class="line">        y = x1 - a // b * y1</span><br><span class="line">        <span class="keyword">return</span> r, x, y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 超大整数超大次幂然后对超大的整数取模</span></span><br><span class="line"><span class="comment"># (base ^ exponent) mod n</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp_mode</span>(<span class="params">base, exp, n</span>):</span><br><span class="line">    exp_array = <span class="built_in">bin</span>(exp)[<span class="number">2</span>:][::-<span class="number">1</span>]</span><br><span class="line">    ll = <span class="built_in">len</span>(exp_array)</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ll):</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;1&#x27;</span>==exp_array[i]):</span><br><span class="line">            result = (result * base) % n</span><br><span class="line">        base = (base * base) % n</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> result % n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算公钥和私钥的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_key</span>(<span class="params">p, q</span>):</span><br><span class="line">    n = p * q</span><br><span class="line">    fy = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)      <span class="comment"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class="line">    e = <span class="number">65537</span>                    <span class="comment"># 选取e   一般选取65537</span></span><br><span class="line">    <span class="comment"># generate d</span></span><br><span class="line">    a = e</span><br><span class="line">    b = fy</span><br><span class="line">    r, x, y = ext_gcd(a, b)</span><br><span class="line">    <span class="comment"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">        x = x + fy</span><br><span class="line">    d = x</span><br><span class="line">    <span class="comment"># 返回：   公钥     私钥</span></span><br><span class="line">    <span class="keyword">return</span>    (n, e), (n, d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">m, pubkey</span>):</span><br><span class="line">    n = pubkey[<span class="number">0</span>]</span><br><span class="line">    e = pubkey[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    time_start_e = time.time()</span><br><span class="line"></span><br><span class="line">    c = exp_mode(m, e, n)</span><br><span class="line"></span><br><span class="line">    time_end_e = time.time()</span><br><span class="line">    time_e = time_end_e - time_start_e</span><br><span class="line">    <span class="keyword">return</span> c,time_e</span><br><span class="line"><span class="comment"># 解密函数 c是密文，解密为明文m</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, selfkey</span>):</span><br><span class="line">    n = selfkey[<span class="number">0</span>]</span><br><span class="line">    d = selfkey[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    time_start_d = time.time()</span><br><span class="line"></span><br><span class="line">    m = exp_mode(c, d, n)</span><br><span class="line"></span><br><span class="line">    time_end_d = time.time()</span><br><span class="line">    time_d = time_end_d - time_start_d</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> m,time_d</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_str</span>(<span class="params">m</span>):  </span><br><span class="line">    an = re.<span class="keyword">match</span>(<span class="string">&#x27;[0-9]+$&#x27;</span>, m)  </span><br><span class="line">    <span class="keyword">if</span> an == <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;密码必须是纯数字！&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class="line">        p = <span class="number">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class="line">        q = <span class="number">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class="line">        pubkey, selfkey = gen_key(p, q)</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class="line">        m = <span class="built_in">input</span>(<span class="string">&quot;请输入你想要处理的数据（必须是纯数字）\n&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> is_str(m):</span><br><span class="line">            m = <span class="built_in">int</span>(m)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;待处理信息--&gt;&quot;</span>,m,<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">            ask = <span class="built_in">input</span>(<span class="string">&quot;请问是要进行加密（输入1）还是解密（输入2）？\n&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> ask == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                c,tme = encrypt(m, pubkey)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;被加密后的密文--&gt;&quot;</span>,c,<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;加密用时&quot;</span>,tme,<span class="string">&quot;s\n&quot;</span>)</span><br><span class="line">                <span class="string">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> ask == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                d,tmd = decrypt(m, selfkey)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;解密用时&quot;</span>,tmd,<span class="string">&quot;s\n&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;请输入“1”（加密）或者“2”（解密）！\n&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSA加密解密 V1.1</title>
      <link href="/2022/11/20/RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-V1-1/"/>
      <url>/2022/11/20/RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-V1-1/</url>
      
        <content type="html"><![CDATA[<h1>RSA加密解密 V1.1</h1><h2 id="V1-1更新日志">V1.1更新日志</h2><p>加入显示加密解密所用时间功能<br>优化整合取模函数exp_mode</p><h2 id="源码">源码</h2><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">扩展欧几里的算法</span></span><br><span class="line"><span class="string">计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ext_gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        x1 = <span class="number">1</span></span><br><span class="line">        y1 = <span class="number">0</span></span><br><span class="line">        x = x1</span><br><span class="line">        y = y1</span><br><span class="line">        r = a</span><br><span class="line">        <span class="keyword">return</span> r, x, y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class="line">        x = y1</span><br><span class="line">        y = x1 - a // b * y1</span><br><span class="line">        <span class="keyword">return</span> r, x, y</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">超大整数超大次幂然后对超大的整数取模</span></span><br><span class="line"><span class="string">(base ^ exponent) mod n</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp_mode</span>(<span class="params">base, exp, n</span>):</span><br><span class="line">    exp_array = <span class="built_in">bin</span>(exp)[<span class="number">2</span>:][::-<span class="number">1</span>]</span><br><span class="line">    ll = <span class="built_in">len</span>(exp_array)</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ll):</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;1&#x27;</span>==exp_array[i]):</span><br><span class="line">            result = (result * base) % n</span><br><span class="line">        base = (base * base) % n</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> result % n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算公钥和私钥的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_key</span>(<span class="params">p, q</span>):</span><br><span class="line">    n = p * q</span><br><span class="line">    fy = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)      <span class="comment"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class="line">    e = <span class="number">65537</span>                    <span class="comment"># 选取e   一般选取65537</span></span><br><span class="line">    <span class="comment"># generate d</span></span><br><span class="line">    a = e</span><br><span class="line">    b = fy</span><br><span class="line">    r, x, y = ext_gcd(a, b)</span><br><span class="line">    <span class="comment"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">        x = x + fy</span><br><span class="line">    d = x</span><br><span class="line">    <span class="comment"># 返回：   公钥     私钥</span></span><br><span class="line">    <span class="keyword">return</span>    (n, e), (n, d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">m, pubkey</span>):</span><br><span class="line">    n = pubkey[<span class="number">0</span>]</span><br><span class="line">    e = pubkey[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    time_start_e = time.time()</span><br><span class="line"></span><br><span class="line">    c = exp_mode(m, e, n)</span><br><span class="line"></span><br><span class="line">    time_end_e = time.time()</span><br><span class="line">    time_e = time_end_e - time_start_e</span><br><span class="line">    <span class="keyword">return</span> c,time_e</span><br><span class="line"><span class="comment"># 解密函数 c是密文，解密为明文m</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, selfkey</span>):</span><br><span class="line">    n = selfkey[<span class="number">0</span>]</span><br><span class="line">    d = selfkey[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    time_start_d = time.time()</span><br><span class="line"></span><br><span class="line">    m = exp_mode(c, d, n)</span><br><span class="line"></span><br><span class="line">    time_end_d = time.time()</span><br><span class="line">    time_d = time_end_d - time_start_d</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> m,time_d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class="line">    p = <span class="number">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class="line">    q = <span class="number">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class="line">    pubkey, selfkey = gen_key(p, q)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class="line">    m = <span class="number">1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;待加密信息--&gt;&quot;</span>,m)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">    c,tme = encrypt(m, pubkey)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;被加密后的密文--&gt;&quot;</span>,c)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;加密用时&quot;</span>,tme,<span class="string">&quot;s&quot;</span>)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class="line">    d,tmd = decrypt(c, selfkey)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;解密用时&quot;</span>,tmd,<span class="string">&quot;s&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSA加密解密 初版</title>
      <link href="/2022/11/20/RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E5%88%9D%E7%89%88/"/>
      <url>/2022/11/20/RSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E5%88%9D%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1>RSA加密解密 初版</h1><h2 id="初版">初版</h2><h2 id="源码">源码</h2><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">扩展欧几里的算法</span></span><br><span class="line"><span class="string">计算 ax + by = 1中的x与y的整数解（a与b互质）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ext_gcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        x1 = <span class="number">1</span></span><br><span class="line">        y1 = <span class="number">0</span></span><br><span class="line">        x = x1</span><br><span class="line">        y = y1</span><br><span class="line">        r = a</span><br><span class="line">        <span class="keyword">return</span> r, x, y</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r, x1, y1 = ext_gcd(b, a % b)</span><br><span class="line">        x = y1</span><br><span class="line">        y = x1 - a // b * y1</span><br><span class="line">        <span class="keyword">return</span> r, x, y</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">超大整数超大次幂然后对超大的整数取模</span></span><br><span class="line"><span class="string">(base ^ exponent) mod n</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exp_mode</span>(<span class="params">base, exponent, n</span>):</span><br><span class="line">    bin_array = <span class="built_in">bin</span>(exponent)[<span class="number">2</span>:][::-<span class="number">1</span>]</span><br><span class="line">    r = <span class="built_in">len</span>(bin_array)</span><br><span class="line">    base_array = []</span><br><span class="line">    </span><br><span class="line">    pre_base = base</span><br><span class="line">    base_array.append(pre_base)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(r - <span class="number">1</span>):</span><br><span class="line">        next_base = (pre_base * pre_base) % n </span><br><span class="line">        base_array.append(next_base)</span><br><span class="line">        pre_base = next_base</span><br><span class="line">        </span><br><span class="line">    a_w_b = __multi(base_array, bin_array, n)</span><br><span class="line">    <span class="keyword">return</span> a_w_b % n</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__multi</span>(<span class="params">array, bin_array, n</span>):</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array)):</span><br><span class="line">        a = array[index]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">int</span>(bin_array[index]):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        result *= a</span><br><span class="line">        result = result % n <span class="comment"># 加快连乘的速度</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算公钥和私钥的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_key</span>(<span class="params">p, q</span>):</span><br><span class="line">    n = p * q</span><br><span class="line">    fy = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)      <span class="comment"># 计算与n互质的整数个数 欧拉函数</span></span><br><span class="line">    e = <span class="number">65537</span>                    <span class="comment"># 选取e   一般选取65537</span></span><br><span class="line">    <span class="comment"># generate d</span></span><br><span class="line">    a = e</span><br><span class="line">    b = fy</span><br><span class="line">    r, x, y = ext_gcd(a, b)</span><br><span class="line">    <span class="comment"># 计算出的x不能是负数，如果是负数，说明p、q、e选取失败，不过可以把x加上fy，使x为正数，才能计算。</span></span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">        x = x + fy</span><br><span class="line">    d = x</span><br><span class="line">    <span class="comment"># 返回：   公钥     私钥</span></span><br><span class="line">    <span class="keyword">return</span>    (n, e), (n, d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数 m是被加密的信息 加密成为c</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">m, pubkey</span>):</span><br><span class="line">    n = pubkey[<span class="number">0</span>]</span><br><span class="line">    e = pubkey[<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    c = exp_mode(m, e, n)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="comment"># 解密函数 c是密文，解密为明文m</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, selfkey</span>):</span><br><span class="line">    n = selfkey[<span class="number">0</span>]</span><br><span class="line">    d = selfkey[<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    m = exp_mode(c, d, n)</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;公钥私钥中用到的两个大质数p,q，都是1024位&#x27;&#x27;&#x27;</span></span><br><span class="line">    p = <span class="number">106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169</span></span><br><span class="line">    q = <span class="number">144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;生成公钥私钥&#x27;&#x27;&#x27;</span></span><br><span class="line">    pubkey, selfkey = gen_key(p, q)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;需要被加密的信息转化成数字，长度小于秘钥n的长度，如果信息长度大于n的长度，那么分段进行加密，分段解密即可。&#x27;&#x27;&#x27;</span></span><br><span class="line">    m = <span class="number">1356205320457610288745198967657644166379972189839804389074591563666634066646564410685955217825048626066190866536592405966964024022236587593447122392540038493893121248948780525117822889230574978651418075403357439692743398250207060920929117606033490559159560987768768324823011579283223392964454439904542675637683985296529882973798752471233683249209762843835985174607047556306705224118165162905676610067022517682197138138621344578050034245933990790845007906416093198845798901781830868021761765904777531676765131379495584915533823288125255520904108500256867069512326595285549579378834222350197662163243932424184772115345</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;待加密信息--&gt;&quot;</span>,m)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;信息加密，m被加密的信息，c是加密后的信息&#x27;&#x27;&#x27;</span></span><br><span class="line">    c = encrypt(m, pubkey)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;被加密后的密文--&gt;&quot;</span>,c)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;信息解密&#x27;&#x27;&#x27;</span></span><br><span class="line">    d = decrypt(c, selfkey)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;被解密后的明文--&gt;&quot;</span>,d)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图形化恩尼格码密码机 初版</title>
      <link href="/2022/11/20/%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%A0%81%E5%AF%86%E7%A0%81%E6%9C%BA-%E5%88%9D%E7%89%88/"/>
      <url>/2022/11/20/%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%A0%81%E5%AF%86%E7%A0%81%E6%9C%BA-%E5%88%9D%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1>图形化恩尼格码密码机 初版</h1><h2 id="初版">初版</h2><h2 id="源码">源码</h2><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此程序需安装easygui库使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> ezgui</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simple_replace</span>(<span class="params">password, replace_word1, replace_word2, replace_word3</span>):  </span><br><span class="line">    count = <span class="number">0</span>  </span><br><span class="line">    new_pass = <span class="string">&#x27;&#x27;</span>  </span><br><span class="line">    ori_table = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>  </span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> password:  </span><br><span class="line">        table1 = <span class="built_in">str</span>.maketrans(ori_table, replace_word1)  <span class="comment"># 建立转子1的映射表</span></span><br><span class="line">        table2 = <span class="built_in">str</span>.maketrans(ori_table, replace_word2)  <span class="comment"># 建立转子2的映射表</span></span><br><span class="line">        table3 = <span class="built_in">str</span>.maketrans(ori_table, replace_word3)  <span class="comment"># 建立转子3的映射表</span></span><br><span class="line">        new_obj = <span class="built_in">str</span>.translate(obj, table1)  </span><br><span class="line">        new_obj = <span class="built_in">str</span>.translate(new_obj, table2)  </span><br><span class="line">        new_obj = <span class="built_in">str</span>.translate(new_obj, table3)  </span><br><span class="line">        new_obj = reverse_word(new_obj)  </span><br><span class="line">        reverse_table1 = <span class="built_in">str</span>.maketrans(replace_word1, ori_table)  </span><br><span class="line">        reverse_table2 = <span class="built_in">str</span>.maketrans(replace_word2, ori_table)</span><br><span class="line">        reverse_table3 = <span class="built_in">str</span>.maketrans(replace_word3, ori_table)</span><br><span class="line">        new_obj = <span class="built_in">str</span>.translate(new_obj, reverse_table3)  </span><br><span class="line">        new_obj = <span class="built_in">str</span>.translate(new_obj, reverse_table2)  </span><br><span class="line">        new_obj = <span class="built_in">str</span>.translate(new_obj, reverse_table1)  </span><br><span class="line">        new_pass += new_obj  </span><br><span class="line">        replace_word1 = rotors(replace_word1)  </span><br><span class="line">        count += <span class="number">1</span>  </span><br><span class="line">        <span class="keyword">if</span> count % <span class="number">676</span> == <span class="number">0</span>:   </span><br><span class="line">            replace_word3 = rotors(replace_word3)</span><br><span class="line">        <span class="keyword">elif</span> count % <span class="number">26</span> == <span class="number">0</span>:  </span><br><span class="line">            replace_word2 = rotors(replace_word2)</span><br><span class="line">    <span class="keyword">return</span> new_pass  </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_str</span>(<span class="params">password, replace_word1, replace_word2, replace_word3</span>):  </span><br><span class="line">    an = re.<span class="keyword">match</span>(<span class="string">&#x27;[a-z]+$&#x27;</span>, password)  </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">type</span>(password) == <span class="built_in">type</span>(replace_word1) == <span class="built_in">type</span>(replace_word2) == <span class="built_in">type</span>(replace_word3) == <span class="built_in">type</span>(<span class="string">&#x27;a&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;密码必须是字符串！&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> an:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;字符串只能包含小写字母！&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> <span class="built_in">len</span>(replace_word1) == <span class="built_in">len</span>(replace_word2) == <span class="built_in">len</span>(replace_word3) == <span class="number">26</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;替换码必须为26个字母！&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>  </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rotors</span>(<span class="params">replace_word</span>):  </span><br><span class="line">    <span class="keyword">return</span> replace_word[<span class="number">1</span>:] + replace_word[<span class="number">0</span>]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自反器很好设置的，只要设置一个字典，保证所有字母（26个）两两对应就可以了</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_word</span>(<span class="params">word</span>):</span><br><span class="line">    dic = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;q&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;e&#x27;</span>: <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;g&#x27;</span>: <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;h&#x27;</span>: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;i&#x27;</span>: <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;j&#x27;</span>: <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;k&#x27;</span>: <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;l&#x27;</span>: <span class="string">&#x27;y&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;m&#x27;</span>: <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;n&#x27;</span>: <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;o&#x27;</span>: <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;p&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;q&#x27;</span>: <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;r&#x27;</span>: <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>: <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;t&#x27;</span>: <span class="string">&#x27;g&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;u&#x27;</span>: <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;v&#x27;</span>: <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;w&#x27;</span>: <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;x&#x27;</span>: <span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;y&#x27;</span>: <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;z&#x27;</span>: <span class="string">&#x27;m&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> dic[word]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    title = <span class="string">&#x27;by 石光k一5&#x27;</span></span><br><span class="line">    ezgui.msgbox(<span class="string">&#x27;这是恩尼格码密码机&#x27;</span>,title)</span><br><span class="line">    a_password = ezgui.enterbox(<span class="string">&#x27;请输入明文加密或密文解密:&#x27;</span>,title)</span><br><span class="line">    r_password1 = <span class="string">&#x27;qwertyuiopasdfghjklzxcvbnm&#x27;</span>  <span class="comment"># 转子1，自己设置即可</span></span><br><span class="line">    r_password2 = <span class="string">&#x27;asdfqwerzxcvtyuiopghjklbnm&#x27;</span>  <span class="comment"># 转子2，自己设置即可</span></span><br><span class="line">    r_password3 = <span class="string">&#x27;poiuytrewqasdfghjklmnbvcxz&#x27;</span>  <span class="comment"># 转子3，自己设置即可</span></span><br><span class="line">    <span class="keyword">if</span> is_str(a_password, r_password1, r_password2, r_password3):</span><br><span class="line">        msg=<span class="string">f&#x27;密文/明文如下:<span class="subst">&#123;simple_replace(a_password, r_password1, r_password2, r_password3)&#125;</span>&#x27;</span></span><br><span class="line">        ezgui.textbox(msg,title)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown测试</title>
      <link href="/2022/11/19/Markdown%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/11/19/Markdown%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>做一个Markdown页面渲染测试</p><span id="more"></span><h1>欢迎使用 <code>Arya</code> 在线 Markdown 编辑器</h1><p><a href="https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn">Arya</a>，是一款基于 <code>Vue</code>、<code>Vditor</code>，为未来而构建的在线 Markdown 编辑器；轻量且强大：内置粘贴 HTML 自动转换为 Markdown，支持流程图、甘特图、时序图、任务列表，可导出携带样式的图片、PDF、微信公众号特制的 HTML 等等。</p><hr><h2 id="如何使用">如何使用</h2><p><strong>微注</strong>：清空目前这份默认文档，即处于可使用态。<a href="https://markdown.lovejade.cn/?utm_source=markdown.lovejade.cn">Arya</a> 另一大优点在于：编辑内容只会在您本地进行保存，不会上传您的数据至服务器，<strong>绝不窥测用户个人隐私，可放心使用</strong>；Github 源码：<a href="https://github.com/nicejade/markdown-online-editor">markdown-online-editor</a>，部分功能仍在开发🚧，敬请期待。</p><p>默认为<a href="https://hacpai.com/article/1577370404903?utm_source=github.com">所见即所得</a>模式，可通过 <code>⌘-⇧-M</code>（<code>Ctrl-⇧-M</code>）进行切换；或通过以下方式：</p><ul><li>所见即所得：<code>⌘-⌥-7</code>（<code>Ctrl-alt-7</code>）；</li><li>即时渲染：<code>⌘-⌥-8</code>（<code>Ctrl-alt-8</code>）；</li><li>分屏渲染：<code>⌘-⌥-9</code>（<code>Ctrl-alt-9</code>）；</li></ul><h3 id="PPT-预览">PPT 预览</h3><p>如果您用作 <code>PPT</code> 预览（入口在 <code>设置</code>中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 <code>---</code> 来定义水平方向上幻灯片，用 <code>--</code> 来定义垂直幻灯片；更多设定可以参见 <a href="https://github.com/hakimel/reveal.js#table-of-contents">RevealJs 文档</a>。</p><hr><h2 id="什么是-Markdown">什么是 Markdown</h2><p><a href="https://nicelinks.site/tags/Markdown/?utm_source=markdown.lovejade.cn">Markdown</a> 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号，以最小的输入代价，生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong>、<em>斜体</em> 或者<a href="https://vue-cli3.lovejade.cn/explore/">超文本链接</a>，更棒的是，它还可以：</p><hr><h3 id="1-制作待办事宜-Todo-列表">1. 制作待办事宜 <code>Todo</code> 列表</h3><ul><li>[x] 🎉 通常<code>Markdown</code> 解析器自带的基本功能；</li><li>[x] 🍀 支持<strong>流程图</strong>、<strong>甘特图</strong>、<strong>时序图</strong>、<strong>任务列表</strong>；</li><li>[x] 🏁 支持粘贴 HTML 自动转换为 Markdown；</li><li>[x] 💃🏻 支持插入原生 Emoji、设置常用表情列表；</li><li>[x] 🚑 支持编辑内容保存<strong>本地存储</strong>，防止意外丢失；</li><li>[x] 📝 支持<strong>实时预览</strong>，主窗口大小拖拽，字符计数；</li><li>[x] 🛠 支持常用快捷键(<strong>Tab</strong>)，及代码块添加复制</li><li>[x] ✨ 支持<strong>导出</strong>携带样式的 PDF、PNG、JPEG 等；</li><li>[x] ✨ 升级 Vditor，新增对<code>echarts</code> 图表的支持；</li><li>[x] 👏 支持检查并格式化 Markdown 语法，使其专业；</li><li>[x] 🦑 支持五线谱、及<a href="https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052">部分站点、视频、音频解析</a>；</li><li>[x] 🌟 增加对<strong>所见即所得</strong>编辑模式的支持(<code>⌘-⇧-M</code>)；</li></ul><hr><h3 id="2-书写一个质能守恒公式-LaTeX">2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$<br>E=mc^2<br>$$</p><hr><h3 id="3-高亮一段代码-code">3. 高亮一段代码[^code]</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给页面里所有的 DOM 元素添加一个 1px 的描边（outline）;</span></span><br><span class="line">[].<span class="property">forEach</span>.<span class="title function_">call</span>($$(<span class="string">&quot;*&quot;</span>),<span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">  a.<span class="property">style</span>.<span class="property">outline</span>=<span class="string">&quot;1px solid #&quot;</span>+(~~(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(<span class="number">1</span>&lt;&lt;<span class="number">24</span>))).<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-高效绘制流程图">4. 高效绘制<a href="https://github.com/knsv/mermaid#flowchart">流程图</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">  A--&gt;B;</span><br><span class="line">  A--&gt;C;</span><br><span class="line">  B--&gt;D;</span><br><span class="line">  C--&gt;D;</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制序列图">5. 高效绘制<a href="https://github.com/knsv/mermaid#sequence-diagram">序列图</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">  participant Alice</span><br><span class="line">  participant Bob</span><br><span class="line">  Alice-&gt;John: Hello John, how are you?</span><br><span class="line">  loop Healthcheck</span><br><span class="line">      John-&gt;John: Fight against hypochondria</span><br><span class="line">  end</span><br><span class="line">  Note right of John: Rational thoughts &lt;br/&gt;prevail...</span><br><span class="line">  John--&gt;Alice: Great!</span><br><span class="line">  John-&gt;Bob: How about you?</span><br><span class="line">  Bob--&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制甘特图">6. 高效绘制<a href="https://github.com/knsv/mermaid#gantt-diagram">甘特图</a></h3><blockquote><p><strong>甘特图</strong>内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">  title 项目开发流程</span><br><span class="line">  section 项目确定</span><br><span class="line">    需求分析       :a1, 2019-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">  section 项目实施</span><br><span class="line">    概要设计      :2019-07-05  , 5d</span><br><span class="line">    详细设计      :2019-07-08, 10d</span><br><span class="line">    编码          :2019-07-15, 10d</span><br><span class="line">    测试          :2019-07-22, 5d</span><br><span class="line">  section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="8-绘制表格">8. 绘制表格</h3><table><thead><tr><th style="text-align:left">作品名称</th><th style="text-align:left">在线地址</th><th style="text-align:center">上线日期</th></tr></thead><tbody><tr><td style="text-align:left">倾城之链</td><td style="text-align:left"><a href="https://nicelinks.site/??utm_source=markdown.lovejade.cn">https://nicelinks.site</a></td><td style="text-align:center">2017-09-20</td></tr><tr><td style="text-align:left">晚晴幽草轩</td><td style="text-align:left"><a href="https://jeffjade.com/??utm_source=markdown.lovejade.cn">https://jeffjade.com</a></td><td style="text-align:center">2014-09-20</td></tr><tr><td style="text-align:left">静轩之别苑</td><td style="text-align:left"><a href="http://quickapp.lovejade.cn/??utm_source=markdown.lovejade.cn">http://quickapp.lovejade.cn</a></td><td style="text-align:center">2019-01-12</td></tr></tbody></table><h3 id="9-更详细语法说明">9. 更详细语法说明</h3><h3 id="想要查看更详细的语法说明，可以参考这份-Markdown-资源列表，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。">想要查看更详细的语法说明，可以参考这份 <a href="https://github.com/nicejade/nice-front-end-tutorial/blob/master/tutorial/markdown-tutorial.md">Markdown 资源列表</a>，涵盖入门至进阶教程，以及资源、平台等信息，能让您对她有更深的认知。</h3><p>总而言之，不同于其它<em>所见即所得</em>的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 <code>GitHub</code> 和 技术问答网站 <code>StackOverFlow</code> 的御用书写格式，而且越发流行，正在在向各行业渗透。</p><p>最新更新于 2019.08.21</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/12/hello-world/"/>
      <url>/2022/11/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
